/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_RESOURCE_PERMS_EXTRA_H
#define _MOCKMOD_RESOURCE_PERMS_EXTRA_H

#include "unity.h"
#include "mod_resource_perms_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_resource_perms_extra_Init(void);
void Mockmod_resource_perms_extra_Destroy(void);
void Mockmod_resource_perms_extra_Verify(void);




#define agent_has_protocol_permission_IgnoreAndReturn(cmock_retval) agent_has_protocol_permission_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void agent_has_protocol_permission_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, enum mod_res_perms_permissions cmock_to_return);
#define agent_has_protocol_permission_StopIgnore() agent_has_protocol_permission_CMockStopIgnore()
void agent_has_protocol_permission_CMockStopIgnore(void);
#define agent_has_protocol_permission_ExpectAnyArgsAndReturn(cmock_retval) agent_has_protocol_permission_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void agent_has_protocol_permission_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, enum mod_res_perms_permissions cmock_to_return);
#define agent_has_protocol_permission_ExpectAndReturn(agent_id, protocol_id, cmock_retval) agent_has_protocol_permission_CMockExpectAndReturn(__LINE__, agent_id, protocol_id, cmock_retval)
void agent_has_protocol_permission_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t agent_id, uint32_t protocol_id, enum mod_res_perms_permissions cmock_to_return);
typedef enum mod_res_perms_permissions (* CMOCK_agent_has_protocol_permission_CALLBACK)(uint32_t agent_id, uint32_t protocol_id, int cmock_num_calls);
void agent_has_protocol_permission_AddCallback(CMOCK_agent_has_protocol_permission_CALLBACK Callback);
void agent_has_protocol_permission_Stub(CMOCK_agent_has_protocol_permission_CALLBACK Callback);
#define agent_has_protocol_permission_StubWithCallback agent_has_protocol_permission_Stub
#define agent_has_protocol_permission_IgnoreArg_agent_id() agent_has_protocol_permission_CMockIgnoreArg_agent_id(__LINE__)
void agent_has_protocol_permission_CMockIgnoreArg_agent_id(UNITY_LINE_TYPE cmock_line);
#define agent_has_protocol_permission_IgnoreArg_protocol_id() agent_has_protocol_permission_CMockIgnoreArg_protocol_id(__LINE__)
void agent_has_protocol_permission_CMockIgnoreArg_protocol_id(UNITY_LINE_TYPE cmock_line);
#define agent_has_resource_permission_IgnoreAndReturn(cmock_retval) agent_has_resource_permission_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void agent_has_resource_permission_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, enum mod_res_perms_permissions cmock_to_return);
#define agent_has_resource_permission_StopIgnore() agent_has_resource_permission_CMockStopIgnore()
void agent_has_resource_permission_CMockStopIgnore(void);
#define agent_has_resource_permission_ExpectAnyArgsAndReturn(cmock_retval) agent_has_resource_permission_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void agent_has_resource_permission_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, enum mod_res_perms_permissions cmock_to_return);
#define agent_has_resource_permission_ExpectAndReturn(agent_id, protocol_id, message_id, resource_id, cmock_retval) agent_has_resource_permission_CMockExpectAndReturn(__LINE__, agent_id, protocol_id, message_id, resource_id, cmock_retval)
void agent_has_resource_permission_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t agent_id, uint32_t protocol_id, uint32_t message_id, uint32_t resource_id, enum mod_res_perms_permissions cmock_to_return);
typedef enum mod_res_perms_permissions (* CMOCK_agent_has_resource_permission_CALLBACK)(uint32_t agent_id, uint32_t protocol_id, uint32_t message_id, uint32_t resource_id, int cmock_num_calls);
void agent_has_resource_permission_AddCallback(CMOCK_agent_has_resource_permission_CALLBACK Callback);
void agent_has_resource_permission_Stub(CMOCK_agent_has_resource_permission_CALLBACK Callback);
#define agent_has_resource_permission_StubWithCallback agent_has_resource_permission_Stub
#define agent_has_resource_permission_IgnoreArg_agent_id() agent_has_resource_permission_CMockIgnoreArg_agent_id(__LINE__)
void agent_has_resource_permission_CMockIgnoreArg_agent_id(UNITY_LINE_TYPE cmock_line);
#define agent_has_resource_permission_IgnoreArg_protocol_id() agent_has_resource_permission_CMockIgnoreArg_protocol_id(__LINE__)
void agent_has_resource_permission_CMockIgnoreArg_protocol_id(UNITY_LINE_TYPE cmock_line);
#define agent_has_resource_permission_IgnoreArg_message_id() agent_has_resource_permission_CMockIgnoreArg_message_id(__LINE__)
void agent_has_resource_permission_CMockIgnoreArg_message_id(UNITY_LINE_TYPE cmock_line);
#define agent_has_resource_permission_IgnoreArg_resource_id() agent_has_resource_permission_CMockIgnoreArg_resource_id(__LINE__)
void agent_has_resource_permission_CMockIgnoreArg_resource_id(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
