/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_TRANSPORT_EXTRA_H
#define _MOCKMOD_TRANSPORT_EXTRA_H

#include "unity.h"
#include "mod_transport_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_transport_extra_Init(void);
void Mockmod_transport_extra_Destroy(void);
void Mockmod_transport_extra_Verify(void);


typedef void(*cmock_mod_transport_extra_func_ptr1)(uintptr_t param);


#define transport_get_fch_address_IgnoreAndReturn(cmock_retval) transport_get_fch_address_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void transport_get_fch_address_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_address_StopIgnore() transport_get_fch_address_CMockStopIgnore()
void transport_get_fch_address_CMockStopIgnore(void);
#define transport_get_fch_address_ExpectAnyArgsAndReturn(cmock_retval) transport_get_fch_address_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void transport_get_fch_address_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_address_ExpectAndReturn(fch_id, fch_address, cmock_retval) transport_get_fch_address_CMockExpectAndReturn(__LINE__, fch_id, fch_address, cmock_retval)
void transport_get_fch_address_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, struct mod_transport_fast_channel_addr* fch_address, int cmock_to_return);
typedef int (* CMOCK_transport_get_fch_address_CALLBACK)(fwk_id_t fch_id, struct mod_transport_fast_channel_addr* fch_address, int cmock_num_calls);
void transport_get_fch_address_AddCallback(CMOCK_transport_get_fch_address_CALLBACK Callback);
void transport_get_fch_address_Stub(CMOCK_transport_get_fch_address_CALLBACK Callback);
#define transport_get_fch_address_StubWithCallback transport_get_fch_address_Stub
#define transport_get_fch_address_ExpectWithArrayAndReturn(fch_id, fch_address, fch_address_Depth, cmock_retval) transport_get_fch_address_CMockExpectWithArrayAndReturn(__LINE__, fch_id, fch_address, fch_address_Depth, cmock_retval)
void transport_get_fch_address_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, struct mod_transport_fast_channel_addr* fch_address, int fch_address_Depth, int cmock_to_return);
#define transport_get_fch_address_ReturnThruPtr_fch_address(fch_address) transport_get_fch_address_CMockReturnMemThruPtr_fch_address(__LINE__, fch_address, sizeof(struct mod_transport_fast_channel_addr))
#define transport_get_fch_address_ReturnArrayThruPtr_fch_address(fch_address, cmock_len) transport_get_fch_address_CMockReturnMemThruPtr_fch_address(__LINE__, fch_address, cmock_len * sizeof(*fch_address))
#define transport_get_fch_address_ReturnMemThruPtr_fch_address(fch_address, cmock_size) transport_get_fch_address_CMockReturnMemThruPtr_fch_address(__LINE__, fch_address, cmock_size)
void transport_get_fch_address_CMockReturnMemThruPtr_fch_address(UNITY_LINE_TYPE cmock_line, struct mod_transport_fast_channel_addr* fch_address, size_t cmock_size);
#define transport_get_fch_address_IgnoreArg_fch_id() transport_get_fch_address_CMockIgnoreArg_fch_id(__LINE__)
void transport_get_fch_address_CMockIgnoreArg_fch_id(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_address_IgnoreArg_fch_address() transport_get_fch_address_CMockIgnoreArg_fch_address(__LINE__)
void transport_get_fch_address_CMockIgnoreArg_fch_address(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_interrupt_type_IgnoreAndReturn(cmock_retval) transport_get_fch_interrupt_type_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void transport_get_fch_interrupt_type_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_interrupt_type_StopIgnore() transport_get_fch_interrupt_type_CMockStopIgnore()
void transport_get_fch_interrupt_type_CMockStopIgnore(void);
#define transport_get_fch_interrupt_type_ExpectAnyArgsAndReturn(cmock_retval) transport_get_fch_interrupt_type_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void transport_get_fch_interrupt_type_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_interrupt_type_ExpectAndReturn(fch_id, fch_interrupt_type, cmock_retval) transport_get_fch_interrupt_type_CMockExpectAndReturn(__LINE__, fch_id, fch_interrupt_type, cmock_retval)
void transport_get_fch_interrupt_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, enum mod_transport_fch_interrupt_type* fch_interrupt_type, int cmock_to_return);
typedef int (* CMOCK_transport_get_fch_interrupt_type_CALLBACK)(fwk_id_t fch_id, enum mod_transport_fch_interrupt_type* fch_interrupt_type, int cmock_num_calls);
void transport_get_fch_interrupt_type_AddCallback(CMOCK_transport_get_fch_interrupt_type_CALLBACK Callback);
void transport_get_fch_interrupt_type_Stub(CMOCK_transport_get_fch_interrupt_type_CALLBACK Callback);
#define transport_get_fch_interrupt_type_StubWithCallback transport_get_fch_interrupt_type_Stub
#define transport_get_fch_interrupt_type_ExpectWithArrayAndReturn(fch_id, fch_interrupt_type, fch_interrupt_type_Depth, cmock_retval) transport_get_fch_interrupt_type_CMockExpectWithArrayAndReturn(__LINE__, fch_id, fch_interrupt_type, fch_interrupt_type_Depth, cmock_retval)
void transport_get_fch_interrupt_type_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, enum mod_transport_fch_interrupt_type* fch_interrupt_type, int fch_interrupt_type_Depth, int cmock_to_return);
#define transport_get_fch_interrupt_type_ReturnThruPtr_fch_interrupt_type(fch_interrupt_type) transport_get_fch_interrupt_type_CMockReturnMemThruPtr_fch_interrupt_type(__LINE__, fch_interrupt_type, sizeof(enum mod_transport_fch_interrupt_type))
#define transport_get_fch_interrupt_type_ReturnArrayThruPtr_fch_interrupt_type(fch_interrupt_type, cmock_len) transport_get_fch_interrupt_type_CMockReturnMemThruPtr_fch_interrupt_type(__LINE__, fch_interrupt_type, cmock_len * sizeof(*fch_interrupt_type))
#define transport_get_fch_interrupt_type_ReturnMemThruPtr_fch_interrupt_type(fch_interrupt_type, cmock_size) transport_get_fch_interrupt_type_CMockReturnMemThruPtr_fch_interrupt_type(__LINE__, fch_interrupt_type, cmock_size)
void transport_get_fch_interrupt_type_CMockReturnMemThruPtr_fch_interrupt_type(UNITY_LINE_TYPE cmock_line, enum mod_transport_fch_interrupt_type* fch_interrupt_type, size_t cmock_size);
#define transport_get_fch_interrupt_type_IgnoreArg_fch_id() transport_get_fch_interrupt_type_CMockIgnoreArg_fch_id(__LINE__)
void transport_get_fch_interrupt_type_CMockIgnoreArg_fch_id(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_interrupt_type_IgnoreArg_fch_interrupt_type() transport_get_fch_interrupt_type_CMockIgnoreArg_fch_interrupt_type(__LINE__)
void transport_get_fch_interrupt_type_CMockIgnoreArg_fch_interrupt_type(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_doorbell_info_IgnoreAndReturn(cmock_retval) transport_get_fch_doorbell_info_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void transport_get_fch_doorbell_info_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_doorbell_info_StopIgnore() transport_get_fch_doorbell_info_CMockStopIgnore()
void transport_get_fch_doorbell_info_CMockStopIgnore(void);
#define transport_get_fch_doorbell_info_ExpectAnyArgsAndReturn(cmock_retval) transport_get_fch_doorbell_info_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void transport_get_fch_doorbell_info_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_doorbell_info_ExpectAndReturn(fch_id, doorbell_info, cmock_retval) transport_get_fch_doorbell_info_CMockExpectAndReturn(__LINE__, fch_id, doorbell_info, cmock_retval)
void transport_get_fch_doorbell_info_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, struct mod_transport_fch_doorbell_info* doorbell_info, int cmock_to_return);
typedef int (* CMOCK_transport_get_fch_doorbell_info_CALLBACK)(fwk_id_t fch_id, struct mod_transport_fch_doorbell_info* doorbell_info, int cmock_num_calls);
void transport_get_fch_doorbell_info_AddCallback(CMOCK_transport_get_fch_doorbell_info_CALLBACK Callback);
void transport_get_fch_doorbell_info_Stub(CMOCK_transport_get_fch_doorbell_info_CALLBACK Callback);
#define transport_get_fch_doorbell_info_StubWithCallback transport_get_fch_doorbell_info_Stub
#define transport_get_fch_doorbell_info_ExpectWithArrayAndReturn(fch_id, doorbell_info, doorbell_info_Depth, cmock_retval) transport_get_fch_doorbell_info_CMockExpectWithArrayAndReturn(__LINE__, fch_id, doorbell_info, doorbell_info_Depth, cmock_retval)
void transport_get_fch_doorbell_info_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, struct mod_transport_fch_doorbell_info* doorbell_info, int doorbell_info_Depth, int cmock_to_return);
#define transport_get_fch_doorbell_info_ReturnThruPtr_doorbell_info(doorbell_info) transport_get_fch_doorbell_info_CMockReturnMemThruPtr_doorbell_info(__LINE__, doorbell_info, sizeof(struct mod_transport_fch_doorbell_info))
#define transport_get_fch_doorbell_info_ReturnArrayThruPtr_doorbell_info(doorbell_info, cmock_len) transport_get_fch_doorbell_info_CMockReturnMemThruPtr_doorbell_info(__LINE__, doorbell_info, cmock_len * sizeof(*doorbell_info))
#define transport_get_fch_doorbell_info_ReturnMemThruPtr_doorbell_info(doorbell_info, cmock_size) transport_get_fch_doorbell_info_CMockReturnMemThruPtr_doorbell_info(__LINE__, doorbell_info, cmock_size)
void transport_get_fch_doorbell_info_CMockReturnMemThruPtr_doorbell_info(UNITY_LINE_TYPE cmock_line, struct mod_transport_fch_doorbell_info* doorbell_info, size_t cmock_size);
#define transport_get_fch_doorbell_info_IgnoreArg_fch_id() transport_get_fch_doorbell_info_CMockIgnoreArg_fch_id(__LINE__)
void transport_get_fch_doorbell_info_CMockIgnoreArg_fch_id(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_doorbell_info_IgnoreArg_doorbell_info() transport_get_fch_doorbell_info_CMockIgnoreArg_doorbell_info(__LINE__)
void transport_get_fch_doorbell_info_CMockIgnoreArg_doorbell_info(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_rate_limit_IgnoreAndReturn(cmock_retval) transport_get_fch_rate_limit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void transport_get_fch_rate_limit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_rate_limit_StopIgnore() transport_get_fch_rate_limit_CMockStopIgnore()
void transport_get_fch_rate_limit_CMockStopIgnore(void);
#define transport_get_fch_rate_limit_ExpectAnyArgsAndReturn(cmock_retval) transport_get_fch_rate_limit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void transport_get_fch_rate_limit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_get_fch_rate_limit_ExpectAndReturn(fch_id, fch_rate_limit, cmock_retval) transport_get_fch_rate_limit_CMockExpectAndReturn(__LINE__, fch_id, fch_rate_limit, cmock_retval)
void transport_get_fch_rate_limit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, uint32_t* fch_rate_limit, int cmock_to_return);
typedef int (* CMOCK_transport_get_fch_rate_limit_CALLBACK)(fwk_id_t fch_id, uint32_t* fch_rate_limit, int cmock_num_calls);
void transport_get_fch_rate_limit_AddCallback(CMOCK_transport_get_fch_rate_limit_CALLBACK Callback);
void transport_get_fch_rate_limit_Stub(CMOCK_transport_get_fch_rate_limit_CALLBACK Callback);
#define transport_get_fch_rate_limit_StubWithCallback transport_get_fch_rate_limit_Stub
#define transport_get_fch_rate_limit_ExpectWithArrayAndReturn(fch_id, fch_rate_limit, fch_rate_limit_Depth, cmock_retval) transport_get_fch_rate_limit_CMockExpectWithArrayAndReturn(__LINE__, fch_id, fch_rate_limit, fch_rate_limit_Depth, cmock_retval)
void transport_get_fch_rate_limit_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, uint32_t* fch_rate_limit, int fch_rate_limit_Depth, int cmock_to_return);
#define transport_get_fch_rate_limit_ReturnThruPtr_fch_rate_limit(fch_rate_limit) transport_get_fch_rate_limit_CMockReturnMemThruPtr_fch_rate_limit(__LINE__, fch_rate_limit, sizeof(uint32_t))
#define transport_get_fch_rate_limit_ReturnArrayThruPtr_fch_rate_limit(fch_rate_limit, cmock_len) transport_get_fch_rate_limit_CMockReturnMemThruPtr_fch_rate_limit(__LINE__, fch_rate_limit, cmock_len * sizeof(*fch_rate_limit))
#define transport_get_fch_rate_limit_ReturnMemThruPtr_fch_rate_limit(fch_rate_limit, cmock_size) transport_get_fch_rate_limit_CMockReturnMemThruPtr_fch_rate_limit(__LINE__, fch_rate_limit, cmock_size)
void transport_get_fch_rate_limit_CMockReturnMemThruPtr_fch_rate_limit(UNITY_LINE_TYPE cmock_line, uint32_t* fch_rate_limit, size_t cmock_size);
#define transport_get_fch_rate_limit_IgnoreArg_fch_id() transport_get_fch_rate_limit_CMockIgnoreArg_fch_id(__LINE__)
void transport_get_fch_rate_limit_CMockIgnoreArg_fch_id(UNITY_LINE_TYPE cmock_line);
#define transport_get_fch_rate_limit_IgnoreArg_fch_rate_limit() transport_get_fch_rate_limit_CMockIgnoreArg_fch_rate_limit(__LINE__)
void transport_get_fch_rate_limit_CMockIgnoreArg_fch_rate_limit(UNITY_LINE_TYPE cmock_line);
#define transport_fch_register_callback_IgnoreAndReturn(cmock_retval) transport_fch_register_callback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void transport_fch_register_callback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_fch_register_callback_StopIgnore() transport_fch_register_callback_CMockStopIgnore()
void transport_fch_register_callback_CMockStopIgnore(void);
#define transport_fch_register_callback_ExpectAnyArgsAndReturn(cmock_retval) transport_fch_register_callback_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void transport_fch_register_callback_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define transport_fch_register_callback_ExpectAndReturn(fch_id, param, fch_callback, cmock_retval) transport_fch_register_callback_CMockExpectAndReturn(__LINE__, fch_id, param, fch_callback, cmock_retval)
void transport_fch_register_callback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t fch_id, uintptr_t param, cmock_mod_transport_extra_func_ptr1 fch_callback, int cmock_to_return);
typedef int (* CMOCK_transport_fch_register_callback_CALLBACK)(fwk_id_t fch_id, uintptr_t param, cmock_mod_transport_extra_func_ptr1 fch_callback, int cmock_num_calls);
void transport_fch_register_callback_AddCallback(CMOCK_transport_fch_register_callback_CALLBACK Callback);
void transport_fch_register_callback_Stub(CMOCK_transport_fch_register_callback_CALLBACK Callback);
#define transport_fch_register_callback_StubWithCallback transport_fch_register_callback_Stub
#define transport_fch_register_callback_IgnoreArg_fch_id() transport_fch_register_callback_CMockIgnoreArg_fch_id(__LINE__)
void transport_fch_register_callback_CMockIgnoreArg_fch_id(UNITY_LINE_TYPE cmock_line);
#define transport_fch_register_callback_IgnoreArg_param() transport_fch_register_callback_CMockIgnoreArg_param(__LINE__)
void transport_fch_register_callback_CMockIgnoreArg_param(UNITY_LINE_TYPE cmock_line);
#define transport_fch_register_callback_IgnoreArg_fch_callback() transport_fch_register_callback_CMockIgnoreArg_fch_callback(__LINE__)
void transport_fch_register_callback_CMockIgnoreArg_fch_callback(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
