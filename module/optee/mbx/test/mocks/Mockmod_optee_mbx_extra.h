/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_OPTEE_MBX_EXTRA_H
#define _MOCKMOD_OPTEE_MBX_EXTRA_H

#include "unity.h"
#include "mod_optee_mbx_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_optee_mbx_extra_Init(void);
void Mockmod_optee_mbx_extra_Destroy(void);
void Mockmod_optee_mbx_extra_Verify(void);




#define mutex_init_Ignore() mutex_init_CMockIgnore()
void mutex_init_CMockIgnore(void);
#define mutex_init_StopIgnore() mutex_init_CMockStopIgnore()
void mutex_init_CMockStopIgnore(void);
#define mutex_init_ExpectAnyArgs() mutex_init_CMockExpectAnyArgs(__LINE__)
void mutex_init_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mutex_init_Expect(m) mutex_init_CMockExpect(__LINE__, m)
void mutex_init_CMockExpect(UNITY_LINE_TYPE cmock_line, struct mutex* m);
typedef void (* CMOCK_mutex_init_CALLBACK)(struct mutex* m, int cmock_num_calls);
void mutex_init_AddCallback(CMOCK_mutex_init_CALLBACK Callback);
void mutex_init_Stub(CMOCK_mutex_init_CALLBACK Callback);
#define mutex_init_StubWithCallback mutex_init_Stub
#define mutex_init_ExpectWithArray(m, m_Depth) mutex_init_CMockExpectWithArray(__LINE__, m, m_Depth)
void mutex_init_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct mutex* m, int m_Depth);
#define mutex_init_ReturnThruPtr_m(m) mutex_init_CMockReturnMemThruPtr_m(__LINE__, m, sizeof(struct mutex))
#define mutex_init_ReturnArrayThruPtr_m(m, cmock_len) mutex_init_CMockReturnMemThruPtr_m(__LINE__, m, cmock_len * sizeof(*m))
#define mutex_init_ReturnMemThruPtr_m(m, cmock_size) mutex_init_CMockReturnMemThruPtr_m(__LINE__, m, cmock_size)
void mutex_init_CMockReturnMemThruPtr_m(UNITY_LINE_TYPE cmock_line, struct mutex* m, size_t cmock_size);
#define mutex_init_IgnoreArg_m() mutex_init_CMockIgnoreArg_m(__LINE__)
void mutex_init_CMockIgnoreArg_m(UNITY_LINE_TYPE cmock_line);
#define mutex_lock_Ignore() mutex_lock_CMockIgnore()
void mutex_lock_CMockIgnore(void);
#define mutex_lock_StopIgnore() mutex_lock_CMockStopIgnore()
void mutex_lock_CMockStopIgnore(void);
#define mutex_lock_ExpectAnyArgs() mutex_lock_CMockExpectAnyArgs(__LINE__)
void mutex_lock_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mutex_lock_Expect(m) mutex_lock_CMockExpect(__LINE__, m)
void mutex_lock_CMockExpect(UNITY_LINE_TYPE cmock_line, struct mutex* m);
typedef void (* CMOCK_mutex_lock_CALLBACK)(struct mutex* m, int cmock_num_calls);
void mutex_lock_AddCallback(CMOCK_mutex_lock_CALLBACK Callback);
void mutex_lock_Stub(CMOCK_mutex_lock_CALLBACK Callback);
#define mutex_lock_StubWithCallback mutex_lock_Stub
#define mutex_lock_ExpectWithArray(m, m_Depth) mutex_lock_CMockExpectWithArray(__LINE__, m, m_Depth)
void mutex_lock_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct mutex* m, int m_Depth);
#define mutex_lock_ReturnThruPtr_m(m) mutex_lock_CMockReturnMemThruPtr_m(__LINE__, m, sizeof(struct mutex))
#define mutex_lock_ReturnArrayThruPtr_m(m, cmock_len) mutex_lock_CMockReturnMemThruPtr_m(__LINE__, m, cmock_len * sizeof(*m))
#define mutex_lock_ReturnMemThruPtr_m(m, cmock_size) mutex_lock_CMockReturnMemThruPtr_m(__LINE__, m, cmock_size)
void mutex_lock_CMockReturnMemThruPtr_m(UNITY_LINE_TYPE cmock_line, struct mutex* m, size_t cmock_size);
#define mutex_lock_IgnoreArg_m() mutex_lock_CMockIgnoreArg_m(__LINE__)
void mutex_lock_CMockIgnoreArg_m(UNITY_LINE_TYPE cmock_line);
#define mutex_unlock_Ignore() mutex_unlock_CMockIgnore()
void mutex_unlock_CMockIgnore(void);
#define mutex_unlock_StopIgnore() mutex_unlock_CMockStopIgnore()
void mutex_unlock_CMockStopIgnore(void);
#define mutex_unlock_ExpectAnyArgs() mutex_unlock_CMockExpectAnyArgs(__LINE__)
void mutex_unlock_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mutex_unlock_Expect(m) mutex_unlock_CMockExpect(__LINE__, m)
void mutex_unlock_CMockExpect(UNITY_LINE_TYPE cmock_line, struct mutex* m);
typedef void (* CMOCK_mutex_unlock_CALLBACK)(struct mutex* m, int cmock_num_calls);
void mutex_unlock_AddCallback(CMOCK_mutex_unlock_CALLBACK Callback);
void mutex_unlock_Stub(CMOCK_mutex_unlock_CALLBACK Callback);
#define mutex_unlock_StubWithCallback mutex_unlock_Stub
#define mutex_unlock_ExpectWithArray(m, m_Depth) mutex_unlock_CMockExpectWithArray(__LINE__, m, m_Depth)
void mutex_unlock_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct mutex* m, int m_Depth);
#define mutex_unlock_ReturnThruPtr_m(m) mutex_unlock_CMockReturnMemThruPtr_m(__LINE__, m, sizeof(struct mutex))
#define mutex_unlock_ReturnArrayThruPtr_m(m, cmock_len) mutex_unlock_CMockReturnMemThruPtr_m(__LINE__, m, cmock_len * sizeof(*m))
#define mutex_unlock_ReturnMemThruPtr_m(m, cmock_size) mutex_unlock_CMockReturnMemThruPtr_m(__LINE__, m, cmock_size)
void mutex_unlock_CMockReturnMemThruPtr_m(UNITY_LINE_TYPE cmock_line, struct mutex* m, size_t cmock_size);
#define mutex_unlock_IgnoreArg_m() mutex_unlock_CMockIgnoreArg_m(__LINE__)
void mutex_unlock_CMockIgnoreArg_m(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
