/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMGI_H
#define _MOCKMGI_H

#include "unity.h"
#include "mgi.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmgi_Init(void);
void Mockmgi_Destroy(void);
void Mockmgi_Verify(void);




#define mgi_get_num_of_monitors_IgnoreAndReturn(cmock_retval) mgi_get_num_of_monitors_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_get_num_of_monitors_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_num_of_monitors_StopIgnore() mgi_get_num_of_monitors_CMockStopIgnore()
void mgi_get_num_of_monitors_CMockStopIgnore(void);
#define mgi_get_num_of_monitors_ExpectAnyArgsAndReturn(cmock_retval) mgi_get_num_of_monitors_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_get_num_of_monitors_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_num_of_monitors_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_get_num_of_monitors_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_get_num_of_monitors_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_get_num_of_monitors_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_get_num_of_monitors_AddCallback(CMOCK_mgi_get_num_of_monitors_CALLBACK Callback);
void mgi_get_num_of_monitors_Stub(CMOCK_mgi_get_num_of_monitors_CALLBACK Callback);
#define mgi_get_num_of_monitors_StubWithCallback mgi_get_num_of_monitors_Stub
#define mgi_get_num_of_monitors_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_get_num_of_monitors_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_get_num_of_monitors_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_get_num_of_monitors_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_get_num_of_monitors_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_get_num_of_monitors_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_get_num_of_monitors_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_get_num_of_monitors_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_get_num_of_monitors_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_get_num_of_monitors_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_get_num_of_monitors_IgnoreArg_smcf_mgi() mgi_get_num_of_monitors_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_get_num_of_monitors_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_monitor_IgnoreAndReturn(cmock_retval) mgi_enable_monitor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_enable_monitor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_monitor_StopIgnore() mgi_enable_monitor_CMockStopIgnore()
void mgi_enable_monitor_CMockStopIgnore(void);
#define mgi_enable_monitor_ExpectAnyArgsAndReturn(cmock_retval) mgi_enable_monitor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_enable_monitor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_monitor_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_enable_monitor_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_enable_monitor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_to_return);
typedef int (* CMOCK_mgi_enable_monitor_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_enable_monitor_AddCallback(CMOCK_mgi_enable_monitor_CALLBACK Callback);
void mgi_enable_monitor_Stub(CMOCK_mgi_enable_monitor_CALLBACK Callback);
#define mgi_enable_monitor_StubWithCallback mgi_enable_monitor_Stub
#define mgi_enable_monitor_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_enable_monitor_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_enable_monitor_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, int cmock_to_return);
#define mgi_enable_monitor_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_monitor_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_monitor_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_monitor_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_monitor_IgnoreArg_smcf_mgi() mgi_enable_monitor_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_monitor_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_monitor_IgnoreArg_monitor() mgi_enable_monitor_CMockIgnoreArg_monitor(__LINE__)
void mgi_enable_monitor_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_all_monitor_IgnoreAndReturn(cmock_retval) mgi_enable_all_monitor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_enable_all_monitor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_all_monitor_StopIgnore() mgi_enable_all_monitor_CMockStopIgnore()
void mgi_enable_all_monitor_CMockStopIgnore(void);
#define mgi_enable_all_monitor_ExpectAnyArgsAndReturn(cmock_retval) mgi_enable_all_monitor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_enable_all_monitor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_all_monitor_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_enable_all_monitor_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_enable_all_monitor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int cmock_to_return);
typedef int (* CMOCK_mgi_enable_all_monitor_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_all_monitor_AddCallback(CMOCK_mgi_enable_all_monitor_CALLBACK Callback);
void mgi_enable_all_monitor_Stub(CMOCK_mgi_enable_all_monitor_CALLBACK Callback);
#define mgi_enable_all_monitor_StubWithCallback mgi_enable_all_monitor_Stub
#define mgi_enable_all_monitor_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_enable_all_monitor_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_enable_all_monitor_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, int cmock_to_return);
#define mgi_enable_all_monitor_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_all_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_all_monitor_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_all_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_all_monitor_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_all_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_all_monitor_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_all_monitor_IgnoreArg_smcf_mgi() mgi_enable_all_monitor_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_all_monitor_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_disable_monitor_IgnoreAndReturn(cmock_retval) mgi_disable_monitor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_disable_monitor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_disable_monitor_StopIgnore() mgi_disable_monitor_CMockStopIgnore()
void mgi_disable_monitor_CMockStopIgnore(void);
#define mgi_disable_monitor_ExpectAnyArgsAndReturn(cmock_retval) mgi_disable_monitor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_disable_monitor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_disable_monitor_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_disable_monitor_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_disable_monitor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_to_return);
typedef int (* CMOCK_mgi_disable_monitor_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_disable_monitor_AddCallback(CMOCK_mgi_disable_monitor_CALLBACK Callback);
void mgi_disable_monitor_Stub(CMOCK_mgi_disable_monitor_CALLBACK Callback);
#define mgi_disable_monitor_StubWithCallback mgi_disable_monitor_Stub
#define mgi_disable_monitor_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_disable_monitor_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_disable_monitor_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, int cmock_to_return);
#define mgi_disable_monitor_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_disable_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_disable_monitor_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_disable_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_disable_monitor_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_disable_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_disable_monitor_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_disable_monitor_IgnoreArg_smcf_mgi() mgi_disable_monitor_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_disable_monitor_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_disable_monitor_IgnoreArg_monitor() mgi_disable_monitor_CMockIgnoreArg_monitor(__LINE__)
void mgi_disable_monitor_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_is_monitor_enabled_IgnoreAndReturn(cmock_retval) mgi_is_monitor_enabled_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_monitor_enabled_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_monitor_enabled_StopIgnore() mgi_is_monitor_enabled_CMockStopIgnore()
void mgi_is_monitor_enabled_CMockStopIgnore(void);
#define mgi_is_monitor_enabled_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_monitor_enabled_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_monitor_enabled_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_monitor_enabled_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_is_monitor_enabled_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_is_monitor_enabled_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_monitor_enabled_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_is_monitor_enabled_AddCallback(CMOCK_mgi_is_monitor_enabled_CALLBACK Callback);
void mgi_is_monitor_enabled_Stub(CMOCK_mgi_is_monitor_enabled_CALLBACK Callback);
#define mgi_is_monitor_enabled_StubWithCallback mgi_is_monitor_enabled_Stub
#define mgi_is_monitor_enabled_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_is_monitor_enabled_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_is_monitor_enabled_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, bool cmock_to_return);
#define mgi_is_monitor_enabled_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_monitor_enabled_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_monitor_enabled_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_monitor_enabled_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_monitor_enabled_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_monitor_enabled_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_monitor_enabled_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_monitor_enabled_IgnoreArg_smcf_mgi() mgi_is_monitor_enabled_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_monitor_enabled_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_monitor_enabled_IgnoreArg_monitor() mgi_is_monitor_enabled_CMockIgnoreArg_monitor(__LINE__)
void mgi_is_monitor_enabled_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_get_number_of_mode_registers_IgnoreAndReturn(cmock_retval) mgi_get_number_of_mode_registers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_get_number_of_mode_registers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_number_of_mode_registers_StopIgnore() mgi_get_number_of_mode_registers_CMockStopIgnore()
void mgi_get_number_of_mode_registers_CMockStopIgnore(void);
#define mgi_get_number_of_mode_registers_ExpectAnyArgsAndReturn(cmock_retval) mgi_get_number_of_mode_registers_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_get_number_of_mode_registers_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_number_of_mode_registers_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_get_number_of_mode_registers_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_get_number_of_mode_registers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_get_number_of_mode_registers_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_get_number_of_mode_registers_AddCallback(CMOCK_mgi_get_number_of_mode_registers_CALLBACK Callback);
void mgi_get_number_of_mode_registers_Stub(CMOCK_mgi_get_number_of_mode_registers_CALLBACK Callback);
#define mgi_get_number_of_mode_registers_StubWithCallback mgi_get_number_of_mode_registers_Stub
#define mgi_get_number_of_mode_registers_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_get_number_of_mode_registers_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_get_number_of_mode_registers_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_get_number_of_mode_registers_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_get_number_of_mode_registers_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_get_number_of_mode_registers_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_get_number_of_mode_registers_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_get_number_of_mode_registers_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_get_number_of_mode_registers_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_get_number_of_mode_registers_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_get_number_of_mode_registers_IgnoreArg_smcf_mgi() mgi_get_number_of_mode_registers_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_get_number_of_mode_registers_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_get_number_of_bits_in_mode_registers_IgnoreAndReturn(cmock_retval) mgi_get_number_of_bits_in_mode_registers_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_get_number_of_bits_in_mode_registers_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_number_of_bits_in_mode_registers_StopIgnore() mgi_get_number_of_bits_in_mode_registers_CMockStopIgnore()
void mgi_get_number_of_bits_in_mode_registers_CMockStopIgnore(void);
#define mgi_get_number_of_bits_in_mode_registers_ExpectAnyArgsAndReturn(cmock_retval) mgi_get_number_of_bits_in_mode_registers_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_get_number_of_bits_in_mode_registers_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_number_of_bits_in_mode_registers_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_get_number_of_bits_in_mode_registers_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_get_number_of_bits_in_mode_registers_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_get_number_of_bits_in_mode_registers_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_get_number_of_bits_in_mode_registers_AddCallback(CMOCK_mgi_get_number_of_bits_in_mode_registers_CALLBACK Callback);
void mgi_get_number_of_bits_in_mode_registers_Stub(CMOCK_mgi_get_number_of_bits_in_mode_registers_CALLBACK Callback);
#define mgi_get_number_of_bits_in_mode_registers_StubWithCallback mgi_get_number_of_bits_in_mode_registers_Stub
#define mgi_get_number_of_bits_in_mode_registers_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_get_number_of_bits_in_mode_registers_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_get_number_of_bits_in_mode_registers_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_get_number_of_bits_in_mode_registers_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_get_number_of_bits_in_mode_registers_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_get_number_of_bits_in_mode_registers_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_get_number_of_bits_in_mode_registers_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_get_number_of_bits_in_mode_registers_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_get_number_of_bits_in_mode_registers_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_get_number_of_bits_in_mode_registers_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_get_number_of_bits_in_mode_registers_IgnoreArg_smcf_mgi() mgi_get_number_of_bits_in_mode_registers_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_get_number_of_bits_in_mode_registers_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_program_mode_IgnoreAndReturn(cmock_retval) mgi_enable_program_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_enable_program_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_program_mode_StopIgnore() mgi_enable_program_mode_CMockStopIgnore()
void mgi_enable_program_mode_CMockStopIgnore(void);
#define mgi_enable_program_mode_ExpectAnyArgsAndReturn(cmock_retval) mgi_enable_program_mode_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_enable_program_mode_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_program_mode_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_enable_program_mode_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_enable_program_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_to_return);
typedef int (* CMOCK_mgi_enable_program_mode_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_enable_program_mode_AddCallback(CMOCK_mgi_enable_program_mode_CALLBACK Callback);
void mgi_enable_program_mode_Stub(CMOCK_mgi_enable_program_mode_CALLBACK Callback);
#define mgi_enable_program_mode_StubWithCallback mgi_enable_program_mode_Stub
#define mgi_enable_program_mode_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_enable_program_mode_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_enable_program_mode_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, int cmock_to_return);
#define mgi_enable_program_mode_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_program_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_program_mode_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_program_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_program_mode_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_program_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_program_mode_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_program_mode_IgnoreArg_smcf_mgi() mgi_enable_program_mode_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_program_mode_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_program_mode_IgnoreArg_monitor() mgi_enable_program_mode_CMockIgnoreArg_monitor(__LINE__)
void mgi_enable_program_mode_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_disable_program_mode_IgnoreAndReturn(cmock_retval) mgi_disable_program_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_disable_program_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_disable_program_mode_StopIgnore() mgi_disable_program_mode_CMockStopIgnore()
void mgi_disable_program_mode_CMockStopIgnore(void);
#define mgi_disable_program_mode_ExpectAnyArgsAndReturn(cmock_retval) mgi_disable_program_mode_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_disable_program_mode_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_disable_program_mode_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_disable_program_mode_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_disable_program_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_to_return);
typedef int (* CMOCK_mgi_disable_program_mode_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_disable_program_mode_AddCallback(CMOCK_mgi_disable_program_mode_CALLBACK Callback);
void mgi_disable_program_mode_Stub(CMOCK_mgi_disable_program_mode_CALLBACK Callback);
#define mgi_disable_program_mode_StubWithCallback mgi_disable_program_mode_Stub
#define mgi_disable_program_mode_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_disable_program_mode_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_disable_program_mode_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, int cmock_to_return);
#define mgi_disable_program_mode_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_disable_program_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_disable_program_mode_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_disable_program_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_disable_program_mode_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_disable_program_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_disable_program_mode_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_disable_program_mode_IgnoreArg_smcf_mgi() mgi_disable_program_mode_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_disable_program_mode_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_disable_program_mode_IgnoreArg_monitor() mgi_disable_program_mode_CMockIgnoreArg_monitor(__LINE__)
void mgi_disable_program_mode_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_enable__program_mode_multi_IgnoreAndReturn(cmock_retval) mgi_enable__program_mode_multi_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_enable__program_mode_multi_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable__program_mode_multi_StopIgnore() mgi_enable__program_mode_multi_CMockStopIgnore()
void mgi_enable__program_mode_multi_CMockStopIgnore(void);
#define mgi_enable__program_mode_multi_ExpectAnyArgsAndReturn(cmock_retval) mgi_enable__program_mode_multi_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_enable__program_mode_multi_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable__program_mode_multi_ExpectAndReturn(smcf_mgi, monitor_mask, cmock_retval) mgi_enable__program_mode_multi_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor_mask, cmock_retval)
void mgi_enable__program_mode_multi_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor_mask, int cmock_to_return);
typedef int (* CMOCK_mgi_enable__program_mode_multi_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor_mask, int cmock_num_calls);
void mgi_enable__program_mode_multi_AddCallback(CMOCK_mgi_enable__program_mode_multi_CALLBACK Callback);
void mgi_enable__program_mode_multi_Stub(CMOCK_mgi_enable__program_mode_multi_CALLBACK Callback);
#define mgi_enable__program_mode_multi_StubWithCallback mgi_enable__program_mode_multi_Stub
#define mgi_enable__program_mode_multi_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor_mask, cmock_retval) mgi_enable__program_mode_multi_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor_mask, cmock_retval)
void mgi_enable__program_mode_multi_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor_mask, int cmock_to_return);
#define mgi_enable__program_mode_multi_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable__program_mode_multi_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable__program_mode_multi_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable__program_mode_multi_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable__program_mode_multi_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable__program_mode_multi_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable__program_mode_multi_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable__program_mode_multi_IgnoreArg_smcf_mgi() mgi_enable__program_mode_multi_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable__program_mode_multi_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable__program_mode_multi_IgnoreArg_monitor_mask() mgi_enable__program_mode_multi_CMockIgnoreArg_monitor_mask(__LINE__)
void mgi_enable__program_mode_multi_CMockIgnoreArg_monitor_mask(UNITY_LINE_TYPE cmock_line);
#define mgi_set_monitor_mode_IgnoreAndReturn(cmock_retval) mgi_set_monitor_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_set_monitor_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_monitor_mode_StopIgnore() mgi_set_monitor_mode_CMockStopIgnore()
void mgi_set_monitor_mode_CMockStopIgnore(void);
#define mgi_set_monitor_mode_ExpectAnyArgsAndReturn(cmock_retval) mgi_set_monitor_mode_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_set_monitor_mode_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_monitor_mode_ExpectAndReturn(smcf_mgi, mode_idx, value, cmock_retval) mgi_set_monitor_mode_CMockExpectAndReturn(__LINE__, smcf_mgi, mode_idx, value, cmock_retval)
void mgi_set_monitor_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t mode_idx, uint32_t value, int cmock_to_return);
typedef int (* CMOCK_mgi_set_monitor_mode_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t mode_idx, uint32_t value, int cmock_num_calls);
void mgi_set_monitor_mode_AddCallback(CMOCK_mgi_set_monitor_mode_CALLBACK Callback);
void mgi_set_monitor_mode_Stub(CMOCK_mgi_set_monitor_mode_CALLBACK Callback);
#define mgi_set_monitor_mode_StubWithCallback mgi_set_monitor_mode_Stub
#define mgi_set_monitor_mode_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, mode_idx, value, cmock_retval) mgi_set_monitor_mode_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, mode_idx, value, cmock_retval)
void mgi_set_monitor_mode_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t mode_idx, uint32_t value, int cmock_to_return);
#define mgi_set_monitor_mode_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_set_monitor_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_set_monitor_mode_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_set_monitor_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_set_monitor_mode_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_set_monitor_mode_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_set_monitor_mode_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_set_monitor_mode_IgnoreArg_smcf_mgi() mgi_set_monitor_mode_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_set_monitor_mode_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_set_monitor_mode_IgnoreArg_mode_idx() mgi_set_monitor_mode_CMockIgnoreArg_mode_idx(__LINE__)
void mgi_set_monitor_mode_CMockIgnoreArg_mode_idx(UNITY_LINE_TYPE cmock_line);
#define mgi_set_monitor_mode_IgnoreArg_value() mgi_set_monitor_mode_CMockIgnoreArg_value(__LINE__)
void mgi_set_monitor_mode_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_monitor_blocking_IgnoreAndReturn(cmock_retval) mgi_enable_monitor_blocking_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_enable_monitor_blocking_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_monitor_blocking_StopIgnore() mgi_enable_monitor_blocking_CMockStopIgnore()
void mgi_enable_monitor_blocking_CMockStopIgnore(void);
#define mgi_enable_monitor_blocking_ExpectAnyArgsAndReturn(cmock_retval) mgi_enable_monitor_blocking_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_enable_monitor_blocking_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_monitor_blocking_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_enable_monitor_blocking_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_enable_monitor_blocking_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_to_return);
typedef int (* CMOCK_mgi_enable_monitor_blocking_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_enable_monitor_blocking_AddCallback(CMOCK_mgi_enable_monitor_blocking_CALLBACK Callback);
void mgi_enable_monitor_blocking_Stub(CMOCK_mgi_enable_monitor_blocking_CALLBACK Callback);
#define mgi_enable_monitor_blocking_StubWithCallback mgi_enable_monitor_blocking_Stub
#define mgi_enable_monitor_blocking_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_enable_monitor_blocking_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_enable_monitor_blocking_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, int cmock_to_return);
#define mgi_enable_monitor_blocking_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_monitor_blocking_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_monitor_blocking_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_monitor_blocking_IgnoreArg_smcf_mgi() mgi_enable_monitor_blocking_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_monitor_blocking_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_monitor_blocking_IgnoreArg_monitor() mgi_enable_monitor_blocking_CMockIgnoreArg_monitor(__LINE__)
void mgi_enable_monitor_blocking_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_disable_monitor_blocking_IgnoreAndReturn(cmock_retval) mgi_disable_monitor_blocking_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_disable_monitor_blocking_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_disable_monitor_blocking_StopIgnore() mgi_disable_monitor_blocking_CMockStopIgnore()
void mgi_disable_monitor_blocking_CMockStopIgnore(void);
#define mgi_disable_monitor_blocking_ExpectAnyArgsAndReturn(cmock_retval) mgi_disable_monitor_blocking_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_disable_monitor_blocking_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_disable_monitor_blocking_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_disable_monitor_blocking_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_disable_monitor_blocking_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_to_return);
typedef int (* CMOCK_mgi_disable_monitor_blocking_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_disable_monitor_blocking_AddCallback(CMOCK_mgi_disable_monitor_blocking_CALLBACK Callback);
void mgi_disable_monitor_blocking_Stub(CMOCK_mgi_disable_monitor_blocking_CALLBACK Callback);
#define mgi_disable_monitor_blocking_StubWithCallback mgi_disable_monitor_blocking_Stub
#define mgi_disable_monitor_blocking_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_disable_monitor_blocking_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_disable_monitor_blocking_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, int cmock_to_return);
#define mgi_disable_monitor_blocking_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_disable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_disable_monitor_blocking_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_disable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_disable_monitor_blocking_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_disable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_disable_monitor_blocking_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_disable_monitor_blocking_IgnoreArg_smcf_mgi() mgi_disable_monitor_blocking_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_disable_monitor_blocking_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_disable_monitor_blocking_IgnoreArg_monitor() mgi_disable_monitor_blocking_CMockIgnoreArg_monitor(__LINE__)
void mgi_disable_monitor_blocking_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_set_sample_type_IgnoreAndReturn(cmock_retval) mgi_set_sample_type_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_set_sample_type_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_sample_type_StopIgnore() mgi_set_sample_type_CMockStopIgnore()
void mgi_set_sample_type_CMockStopIgnore(void);
#define mgi_set_sample_type_ExpectAnyArgsAndReturn(cmock_retval) mgi_set_sample_type_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_set_sample_type_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_sample_type_ExpectAndReturn(smcf_mgi, type, cmock_retval) mgi_set_sample_type_CMockExpectAndReturn(__LINE__, smcf_mgi, type, cmock_retval)
void mgi_set_sample_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t type, int cmock_to_return);
typedef int (* CMOCK_mgi_set_sample_type_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t type, int cmock_num_calls);
void mgi_set_sample_type_AddCallback(CMOCK_mgi_set_sample_type_CALLBACK Callback);
void mgi_set_sample_type_Stub(CMOCK_mgi_set_sample_type_CALLBACK Callback);
#define mgi_set_sample_type_StubWithCallback mgi_set_sample_type_Stub
#define mgi_set_sample_type_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, type, cmock_retval) mgi_set_sample_type_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, type, cmock_retval)
void mgi_set_sample_type_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t type, int cmock_to_return);
#define mgi_set_sample_type_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_set_sample_type_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_set_sample_type_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_set_sample_type_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_set_sample_type_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_set_sample_type_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_set_sample_type_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_set_sample_type_IgnoreArg_smcf_mgi() mgi_set_sample_type_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_set_sample_type_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_set_sample_type_IgnoreArg_type() mgi_set_sample_type_CMockIgnoreArg_type(__LINE__)
void mgi_set_sample_type_CMockIgnoreArg_type(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_sample_Ignore() mgi_enable_sample_CMockIgnore()
void mgi_enable_sample_CMockIgnore(void);
#define mgi_enable_sample_StopIgnore() mgi_enable_sample_CMockStopIgnore()
void mgi_enable_sample_CMockStopIgnore(void);
#define mgi_enable_sample_ExpectAnyArgs() mgi_enable_sample_CMockExpectAnyArgs(__LINE__)
void mgi_enable_sample_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_sample_Expect(smcf_mgi) mgi_enable_sample_CMockExpect(__LINE__, smcf_mgi)
void mgi_enable_sample_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_enable_sample_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_sample_AddCallback(CMOCK_mgi_enable_sample_CALLBACK Callback);
void mgi_enable_sample_Stub(CMOCK_mgi_enable_sample_CALLBACK Callback);
#define mgi_enable_sample_StubWithCallback mgi_enable_sample_Stub
#define mgi_enable_sample_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_enable_sample_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_enable_sample_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_enable_sample_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_sample_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_sample_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_sample_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_sample_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_sample_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_sample_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_sample_IgnoreArg_smcf_mgi() mgi_enable_sample_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_sample_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_sample_ongoing_IgnoreAndReturn(cmock_retval) mgi_is_sample_ongoing_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_sample_ongoing_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_sample_ongoing_StopIgnore() mgi_is_sample_ongoing_CMockStopIgnore()
void mgi_is_sample_ongoing_CMockStopIgnore(void);
#define mgi_is_sample_ongoing_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_sample_ongoing_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_sample_ongoing_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_sample_ongoing_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_is_sample_ongoing_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_is_sample_ongoing_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_sample_ongoing_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_is_sample_ongoing_AddCallback(CMOCK_mgi_is_sample_ongoing_CALLBACK Callback);
void mgi_is_sample_ongoing_Stub(CMOCK_mgi_is_sample_ongoing_CALLBACK Callback);
#define mgi_is_sample_ongoing_StubWithCallback mgi_is_sample_ongoing_Stub
#define mgi_is_sample_ongoing_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_is_sample_ongoing_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_is_sample_ongoing_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, bool cmock_to_return);
#define mgi_is_sample_ongoing_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_sample_ongoing_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_sample_ongoing_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_sample_ongoing_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_sample_ongoing_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_sample_ongoing_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_sample_ongoing_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_sample_ongoing_IgnoreArg_smcf_mgi() mgi_is_sample_ongoing_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_sample_ongoing_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_set_sample_delay_IgnoreAndReturn(cmock_retval) mgi_set_sample_delay_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_set_sample_delay_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_sample_delay_StopIgnore() mgi_set_sample_delay_CMockStopIgnore()
void mgi_set_sample_delay_CMockStopIgnore(void);
#define mgi_set_sample_delay_ExpectAnyArgsAndReturn(cmock_retval) mgi_set_sample_delay_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_set_sample_delay_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_sample_delay_ExpectAndReturn(smcf_mgi, delay, cmock_retval) mgi_set_sample_delay_CMockExpectAndReturn(__LINE__, smcf_mgi, delay, cmock_retval)
void mgi_set_sample_delay_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t delay, int cmock_to_return);
typedef int (* CMOCK_mgi_set_sample_delay_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t delay, int cmock_num_calls);
void mgi_set_sample_delay_AddCallback(CMOCK_mgi_set_sample_delay_CALLBACK Callback);
void mgi_set_sample_delay_Stub(CMOCK_mgi_set_sample_delay_CALLBACK Callback);
#define mgi_set_sample_delay_StubWithCallback mgi_set_sample_delay_Stub
#define mgi_set_sample_delay_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, delay, cmock_retval) mgi_set_sample_delay_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, delay, cmock_retval)
void mgi_set_sample_delay_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t delay, int cmock_to_return);
#define mgi_set_sample_delay_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_set_sample_delay_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_set_sample_delay_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_set_sample_delay_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_set_sample_delay_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_set_sample_delay_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_set_sample_delay_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_set_sample_delay_IgnoreArg_smcf_mgi() mgi_set_sample_delay_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_set_sample_delay_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_set_sample_delay_IgnoreArg_delay() mgi_set_sample_delay_CMockIgnoreArg_delay(__LINE__)
void mgi_set_sample_delay_CMockIgnoreArg_delay(UNITY_LINE_TYPE cmock_line);
#define mgi_is_data_packed_IgnoreAndReturn(cmock_retval) mgi_is_data_packed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_data_packed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_data_packed_StopIgnore() mgi_is_data_packed_CMockStopIgnore()
void mgi_is_data_packed_CMockStopIgnore(void);
#define mgi_is_data_packed_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_data_packed_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_data_packed_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_data_packed_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_is_data_packed_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_is_data_packed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_data_packed_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_is_data_packed_AddCallback(CMOCK_mgi_is_data_packed_CALLBACK Callback);
void mgi_is_data_packed_Stub(CMOCK_mgi_is_data_packed_CALLBACK Callback);
#define mgi_is_data_packed_StubWithCallback mgi_is_data_packed_Stub
#define mgi_is_data_packed_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_is_data_packed_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_is_data_packed_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, bool cmock_to_return);
#define mgi_is_data_packed_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_data_packed_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_data_packed_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_data_packed_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_data_packed_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_data_packed_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_data_packed_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_data_packed_IgnoreArg_smcf_mgi() mgi_is_data_packed_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_data_packed_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_number_of_data_values_per_monitor_IgnoreAndReturn(cmock_retval) mgi_number_of_data_values_per_monitor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_number_of_data_values_per_monitor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_number_of_data_values_per_monitor_StopIgnore() mgi_number_of_data_values_per_monitor_CMockStopIgnore()
void mgi_number_of_data_values_per_monitor_CMockStopIgnore(void);
#define mgi_number_of_data_values_per_monitor_ExpectAnyArgsAndReturn(cmock_retval) mgi_number_of_data_values_per_monitor_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_number_of_data_values_per_monitor_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_number_of_data_values_per_monitor_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_number_of_data_values_per_monitor_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_number_of_data_values_per_monitor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_number_of_data_values_per_monitor_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_number_of_data_values_per_monitor_AddCallback(CMOCK_mgi_number_of_data_values_per_monitor_CALLBACK Callback);
void mgi_number_of_data_values_per_monitor_Stub(CMOCK_mgi_number_of_data_values_per_monitor_CALLBACK Callback);
#define mgi_number_of_data_values_per_monitor_StubWithCallback mgi_number_of_data_values_per_monitor_Stub
#define mgi_number_of_data_values_per_monitor_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_number_of_data_values_per_monitor_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_number_of_data_values_per_monitor_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_number_of_data_values_per_monitor_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_number_of_data_values_per_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_number_of_data_values_per_monitor_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_number_of_data_values_per_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_number_of_data_values_per_monitor_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_number_of_data_values_per_monitor_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_number_of_data_values_per_monitor_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_number_of_data_values_per_monitor_IgnoreArg_smcf_mgi() mgi_number_of_data_values_per_monitor_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_number_of_data_values_per_monitor_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_monitor_data_width_IgnoreAndReturn(cmock_retval) mgi_monitor_data_width_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_monitor_data_width_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_monitor_data_width_StopIgnore() mgi_monitor_data_width_CMockStopIgnore()
void mgi_monitor_data_width_CMockStopIgnore(void);
#define mgi_monitor_data_width_ExpectAnyArgsAndReturn(cmock_retval) mgi_monitor_data_width_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_monitor_data_width_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_monitor_data_width_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_monitor_data_width_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_monitor_data_width_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_monitor_data_width_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_monitor_data_width_AddCallback(CMOCK_mgi_monitor_data_width_CALLBACK Callback);
void mgi_monitor_data_width_Stub(CMOCK_mgi_monitor_data_width_CALLBACK Callback);
#define mgi_monitor_data_width_StubWithCallback mgi_monitor_data_width_Stub
#define mgi_monitor_data_width_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_monitor_data_width_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_monitor_data_width_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_monitor_data_width_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_monitor_data_width_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_monitor_data_width_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_monitor_data_width_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_monitor_data_width_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_monitor_data_width_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_monitor_data_width_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_monitor_data_width_IgnoreArg_smcf_mgi() mgi_monitor_data_width_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_monitor_data_width_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_alternate_data_address_supported_IgnoreAndReturn(cmock_retval) mgi_is_alternate_data_address_supported_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_alternate_data_address_supported_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_alternate_data_address_supported_StopIgnore() mgi_is_alternate_data_address_supported_CMockStopIgnore()
void mgi_is_alternate_data_address_supported_CMockStopIgnore(void);
#define mgi_is_alternate_data_address_supported_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_alternate_data_address_supported_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_alternate_data_address_supported_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_alternate_data_address_supported_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_is_alternate_data_address_supported_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_is_alternate_data_address_supported_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_alternate_data_address_supported_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_is_alternate_data_address_supported_AddCallback(CMOCK_mgi_is_alternate_data_address_supported_CALLBACK Callback);
void mgi_is_alternate_data_address_supported_Stub(CMOCK_mgi_is_alternate_data_address_supported_CALLBACK Callback);
#define mgi_is_alternate_data_address_supported_StubWithCallback mgi_is_alternate_data_address_supported_Stub
#define mgi_is_alternate_data_address_supported_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_is_alternate_data_address_supported_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_is_alternate_data_address_supported_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, bool cmock_to_return);
#define mgi_is_alternate_data_address_supported_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_alternate_data_address_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_alternate_data_address_supported_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_alternate_data_address_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_alternate_data_address_supported_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_alternate_data_address_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_alternate_data_address_supported_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_alternate_data_address_supported_IgnoreArg_smcf_mgi() mgi_is_alternate_data_address_supported_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_alternate_data_address_supported_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_dma_supported_IgnoreAndReturn(cmock_retval) mgi_is_dma_supported_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_dma_supported_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_dma_supported_StopIgnore() mgi_is_dma_supported_CMockStopIgnore()
void mgi_is_dma_supported_CMockStopIgnore(void);
#define mgi_is_dma_supported_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_dma_supported_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_dma_supported_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_dma_supported_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_is_dma_supported_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_is_dma_supported_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_dma_supported_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_is_dma_supported_AddCallback(CMOCK_mgi_is_dma_supported_CALLBACK Callback);
void mgi_is_dma_supported_Stub(CMOCK_mgi_is_dma_supported_CALLBACK Callback);
#define mgi_is_dma_supported_StubWithCallback mgi_is_dma_supported_Stub
#define mgi_is_dma_supported_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_is_dma_supported_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_is_dma_supported_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, bool cmock_to_return);
#define mgi_is_dma_supported_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_dma_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_dma_supported_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_dma_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_dma_supported_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_dma_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_dma_supported_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_dma_supported_IgnoreArg_smcf_mgi() mgi_is_dma_supported_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_dma_supported_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_set_dma_data_address_IgnoreAndReturn(cmock_retval) mgi_set_dma_data_address_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_set_dma_data_address_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_dma_data_address_StopIgnore() mgi_set_dma_data_address_CMockStopIgnore()
void mgi_set_dma_data_address_CMockStopIgnore(void);
#define mgi_set_dma_data_address_ExpectAnyArgsAndReturn(cmock_retval) mgi_set_dma_data_address_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_set_dma_data_address_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_set_dma_data_address_ExpectAndReturn(smcf_mgi, address, cmock_retval) mgi_set_dma_data_address_CMockExpectAndReturn(__LINE__, smcf_mgi, address, cmock_retval)
void mgi_set_dma_data_address_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint64_t address, int cmock_to_return);
typedef int (* CMOCK_mgi_set_dma_data_address_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint64_t address, int cmock_num_calls);
void mgi_set_dma_data_address_AddCallback(CMOCK_mgi_set_dma_data_address_CALLBACK Callback);
void mgi_set_dma_data_address_Stub(CMOCK_mgi_set_dma_data_address_CALLBACK Callback);
#define mgi_set_dma_data_address_StubWithCallback mgi_set_dma_data_address_Stub
#define mgi_set_dma_data_address_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, address, cmock_retval) mgi_set_dma_data_address_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, address, cmock_retval)
void mgi_set_dma_data_address_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint64_t address, int cmock_to_return);
#define mgi_set_dma_data_address_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_set_dma_data_address_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_set_dma_data_address_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_set_dma_data_address_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_set_dma_data_address_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_set_dma_data_address_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_set_dma_data_address_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_set_dma_data_address_IgnoreArg_smcf_mgi() mgi_set_dma_data_address_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_set_dma_data_address_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_set_dma_data_address_IgnoreArg_address() mgi_set_dma_data_address_CMockIgnoreArg_address(__LINE__)
void mgi_set_dma_data_address_CMockIgnoreArg_address(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_dma_IgnoreAndReturn(cmock_retval) mgi_enable_dma_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_enable_dma_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_dma_StopIgnore() mgi_enable_dma_CMockStopIgnore()
void mgi_enable_dma_CMockStopIgnore(void);
#define mgi_enable_dma_ExpectAnyArgsAndReturn(cmock_retval) mgi_enable_dma_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_enable_dma_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mgi_enable_dma_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_enable_dma_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_enable_dma_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int cmock_to_return);
typedef int (* CMOCK_mgi_enable_dma_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_dma_AddCallback(CMOCK_mgi_enable_dma_CALLBACK Callback);
void mgi_enable_dma_Stub(CMOCK_mgi_enable_dma_CALLBACK Callback);
#define mgi_enable_dma_StubWithCallback mgi_enable_dma_Stub
#define mgi_enable_dma_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_enable_dma_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_enable_dma_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, int cmock_to_return);
#define mgi_enable_dma_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_dma_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_dma_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_dma_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_dma_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_dma_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_dma_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_dma_IgnoreArg_smcf_mgi() mgi_enable_dma_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_dma_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_unpack_data_IgnoreAndReturn(cmock_retval) mgi_unpack_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_unpack_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_unpack_data_StopIgnore() mgi_unpack_data_CMockStopIgnore()
void mgi_unpack_data_CMockStopIgnore(void);
#define mgi_unpack_data_ExpectAnyArgsAndReturn(cmock_retval) mgi_unpack_data_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_unpack_data_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_unpack_data_ExpectAndReturn(data_addr, mli_idx, data_idx, num_of_data, alignment, cmock_retval) mgi_unpack_data_CMockExpectAndReturn(__LINE__, data_addr, mli_idx, data_idx, num_of_data, alignment, cmock_retval)
void mgi_unpack_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t volatile const* data_addr, uint32_t mli_idx, uint32_t data_idx, uint32_t num_of_data, uint32_t alignment, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_unpack_data_CALLBACK)(uint32_t volatile const* data_addr, uint32_t mli_idx, uint32_t data_idx, uint32_t num_of_data, uint32_t alignment, int cmock_num_calls);
void mgi_unpack_data_AddCallback(CMOCK_mgi_unpack_data_CALLBACK Callback);
void mgi_unpack_data_Stub(CMOCK_mgi_unpack_data_CALLBACK Callback);
#define mgi_unpack_data_StubWithCallback mgi_unpack_data_Stub
#define mgi_unpack_data_ExpectWithArrayAndReturn(data_addr, data_addr_Depth, mli_idx, data_idx, num_of_data, alignment, cmock_retval) mgi_unpack_data_CMockExpectWithArrayAndReturn(__LINE__, data_addr, data_addr_Depth, mli_idx, data_idx, num_of_data, alignment, cmock_retval)
void mgi_unpack_data_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t volatile const* data_addr, int data_addr_Depth, uint32_t mli_idx, uint32_t data_idx, uint32_t num_of_data, uint32_t alignment, uint32_t cmock_to_return);
#define mgi_unpack_data_IgnoreArg_data_addr() mgi_unpack_data_CMockIgnoreArg_data_addr(__LINE__)
void mgi_unpack_data_CMockIgnoreArg_data_addr(UNITY_LINE_TYPE cmock_line);
#define mgi_unpack_data_IgnoreArg_mli_idx() mgi_unpack_data_CMockIgnoreArg_mli_idx(__LINE__)
void mgi_unpack_data_CMockIgnoreArg_mli_idx(UNITY_LINE_TYPE cmock_line);
#define mgi_unpack_data_IgnoreArg_data_idx() mgi_unpack_data_CMockIgnoreArg_data_idx(__LINE__)
void mgi_unpack_data_CMockIgnoreArg_data_idx(UNITY_LINE_TYPE cmock_line);
#define mgi_unpack_data_IgnoreArg_num_of_data() mgi_unpack_data_CMockIgnoreArg_num_of_data(__LINE__)
void mgi_unpack_data_CMockIgnoreArg_num_of_data(UNITY_LINE_TYPE cmock_line);
#define mgi_unpack_data_IgnoreArg_alignment() mgi_unpack_data_CMockIgnoreArg_alignment(__LINE__)
void mgi_unpack_data_CMockIgnoreArg_alignment(UNITY_LINE_TYPE cmock_line);
#define mgi_get_start_sample_id_IgnoreAndReturn(cmock_retval) mgi_get_start_sample_id_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_get_start_sample_id_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_start_sample_id_StopIgnore() mgi_get_start_sample_id_CMockStopIgnore()
void mgi_get_start_sample_id_CMockStopIgnore(void);
#define mgi_get_start_sample_id_ExpectAnyArgsAndReturn(cmock_retval) mgi_get_start_sample_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_get_start_sample_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_start_sample_id_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_get_start_sample_id_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_get_start_sample_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_get_start_sample_id_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_get_start_sample_id_AddCallback(CMOCK_mgi_get_start_sample_id_CALLBACK Callback);
void mgi_get_start_sample_id_Stub(CMOCK_mgi_get_start_sample_id_CALLBACK Callback);
#define mgi_get_start_sample_id_StubWithCallback mgi_get_start_sample_id_Stub
#define mgi_get_start_sample_id_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_get_start_sample_id_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_get_start_sample_id_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_get_start_sample_id_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_get_start_sample_id_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_get_start_sample_id_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_get_start_sample_id_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_get_start_sample_id_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_get_start_sample_id_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_get_start_sample_id_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_get_start_sample_id_IgnoreArg_smcf_mgi() mgi_get_start_sample_id_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_get_start_sample_id_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_get_end_sample_id_IgnoreAndReturn(cmock_retval) mgi_get_end_sample_id_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_get_end_sample_id_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_end_sample_id_StopIgnore() mgi_get_end_sample_id_CMockStopIgnore()
void mgi_get_end_sample_id_CMockStopIgnore(void);
#define mgi_get_end_sample_id_ExpectAnyArgsAndReturn(cmock_retval) mgi_get_end_sample_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_get_end_sample_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_end_sample_id_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_get_end_sample_id_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_get_end_sample_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_get_end_sample_id_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_get_end_sample_id_AddCallback(CMOCK_mgi_get_end_sample_id_CALLBACK Callback);
void mgi_get_end_sample_id_Stub(CMOCK_mgi_get_end_sample_id_CALLBACK Callback);
#define mgi_get_end_sample_id_StubWithCallback mgi_get_end_sample_id_Stub
#define mgi_get_end_sample_id_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_get_end_sample_id_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_get_end_sample_id_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_get_end_sample_id_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_get_end_sample_id_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_get_end_sample_id_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_get_end_sample_id_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_get_end_sample_id_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_get_end_sample_id_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_get_end_sample_id_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_get_end_sample_id_IgnoreArg_smcf_mgi() mgi_get_end_sample_id_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_get_end_sample_id_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_data_valid_IgnoreAndReturn(cmock_retval) mgi_is_data_valid_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_data_valid_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_data_valid_StopIgnore() mgi_is_data_valid_CMockStopIgnore()
void mgi_is_data_valid_CMockStopIgnore(void);
#define mgi_is_data_valid_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_data_valid_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_data_valid_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_data_valid_ExpectAndReturn(smcf_mgi, monitor, cmock_retval) mgi_is_data_valid_CMockExpectAndReturn(__LINE__, smcf_mgi, monitor, cmock_retval)
void mgi_is_data_valid_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_data_valid_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t monitor, int cmock_num_calls);
void mgi_is_data_valid_AddCallback(CMOCK_mgi_is_data_valid_CALLBACK Callback);
void mgi_is_data_valid_Stub(CMOCK_mgi_is_data_valid_CALLBACK Callback);
#define mgi_is_data_valid_StubWithCallback mgi_is_data_valid_Stub
#define mgi_is_data_valid_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval) mgi_is_data_valid_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, monitor, cmock_retval)
void mgi_is_data_valid_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t monitor, bool cmock_to_return);
#define mgi_is_data_valid_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_data_valid_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_data_valid_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_data_valid_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_data_valid_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_data_valid_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_data_valid_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_data_valid_IgnoreArg_smcf_mgi() mgi_is_data_valid_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_data_valid_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_data_valid_IgnoreArg_monitor() mgi_is_data_valid_CMockIgnoreArg_monitor(__LINE__)
void mgi_is_data_valid_CMockIgnoreArg_monitor(UNITY_LINE_TYPE cmock_line);
#define mgi_is_the_source_triggered_the_interrupt_IgnoreAndReturn(cmock_retval) mgi_is_the_source_triggered_the_interrupt_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_the_source_triggered_the_interrupt_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_the_source_triggered_the_interrupt_StopIgnore() mgi_is_the_source_triggered_the_interrupt_CMockStopIgnore()
void mgi_is_the_source_triggered_the_interrupt_CMockStopIgnore(void);
#define mgi_is_the_source_triggered_the_interrupt_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_the_source_triggered_the_interrupt_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_the_source_triggered_the_interrupt_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_the_source_triggered_the_interrupt_ExpectAndReturn(smcf_mgi, interrupt_source_pos, cmock_retval) mgi_is_the_source_triggered_the_interrupt_CMockExpectAndReturn(__LINE__, smcf_mgi, interrupt_source_pos, cmock_retval)
void mgi_is_the_source_triggered_the_interrupt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_the_source_triggered_the_interrupt_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos, int cmock_num_calls);
void mgi_is_the_source_triggered_the_interrupt_AddCallback(CMOCK_mgi_is_the_source_triggered_the_interrupt_CALLBACK Callback);
void mgi_is_the_source_triggered_the_interrupt_Stub(CMOCK_mgi_is_the_source_triggered_the_interrupt_CALLBACK Callback);
#define mgi_is_the_source_triggered_the_interrupt_StubWithCallback mgi_is_the_source_triggered_the_interrupt_Stub
#define mgi_is_the_source_triggered_the_interrupt_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, interrupt_source_pos, cmock_retval) mgi_is_the_source_triggered_the_interrupt_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, interrupt_source_pos, cmock_retval)
void mgi_is_the_source_triggered_the_interrupt_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t interrupt_source_pos, bool cmock_to_return);
#define mgi_is_the_source_triggered_the_interrupt_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_the_source_triggered_the_interrupt_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_the_source_triggered_the_interrupt_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_the_source_triggered_the_interrupt_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_the_source_triggered_the_interrupt_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_the_source_triggered_the_interrupt_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_the_source_triggered_the_interrupt_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_the_source_triggered_the_interrupt_IgnoreArg_smcf_mgi() mgi_is_the_source_triggered_the_interrupt_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_the_source_triggered_the_interrupt_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_is_the_source_triggered_the_interrupt_IgnoreArg_interrupt_source_pos() mgi_is_the_source_triggered_the_interrupt_CMockIgnoreArg_interrupt_source_pos(__LINE__)
void mgi_is_the_source_triggered_the_interrupt_CMockIgnoreArg_interrupt_source_pos(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_clear_Ignore() mgi_interrupt_source_clear_CMockIgnore()
void mgi_interrupt_source_clear_CMockIgnore(void);
#define mgi_interrupt_source_clear_StopIgnore() mgi_interrupt_source_clear_CMockStopIgnore()
void mgi_interrupt_source_clear_CMockStopIgnore(void);
#define mgi_interrupt_source_clear_ExpectAnyArgs() mgi_interrupt_source_clear_CMockExpectAnyArgs(__LINE__)
void mgi_interrupt_source_clear_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_clear_Expect(smcf_mgi, interrupt_source_pos) mgi_interrupt_source_clear_CMockExpect(__LINE__, smcf_mgi, interrupt_source_pos)
void mgi_interrupt_source_clear_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos);
typedef void (* CMOCK_mgi_interrupt_source_clear_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos, int cmock_num_calls);
void mgi_interrupt_source_clear_AddCallback(CMOCK_mgi_interrupt_source_clear_CALLBACK Callback);
void mgi_interrupt_source_clear_Stub(CMOCK_mgi_interrupt_source_clear_CALLBACK Callback);
#define mgi_interrupt_source_clear_StubWithCallback mgi_interrupt_source_clear_Stub
#define mgi_interrupt_source_clear_ExpectWithArray(smcf_mgi, smcf_mgi_Depth, interrupt_source_pos) mgi_interrupt_source_clear_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth, interrupt_source_pos)
void mgi_interrupt_source_clear_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t interrupt_source_pos);
#define mgi_interrupt_source_clear_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_interrupt_source_clear_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_interrupt_source_clear_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_interrupt_source_clear_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_interrupt_source_clear_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_interrupt_source_clear_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_interrupt_source_clear_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_interrupt_source_clear_IgnoreArg_smcf_mgi() mgi_interrupt_source_clear_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_interrupt_source_clear_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_clear_IgnoreArg_interrupt_source_pos() mgi_interrupt_source_clear_CMockIgnoreArg_interrupt_source_pos(__LINE__)
void mgi_interrupt_source_clear_CMockIgnoreArg_interrupt_source_pos(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_mask_Ignore() mgi_interrupt_source_mask_CMockIgnore()
void mgi_interrupt_source_mask_CMockIgnore(void);
#define mgi_interrupt_source_mask_StopIgnore() mgi_interrupt_source_mask_CMockStopIgnore()
void mgi_interrupt_source_mask_CMockStopIgnore(void);
#define mgi_interrupt_source_mask_ExpectAnyArgs() mgi_interrupt_source_mask_CMockExpectAnyArgs(__LINE__)
void mgi_interrupt_source_mask_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_mask_Expect(smcf_mgi, interrupt_source_pos) mgi_interrupt_source_mask_CMockExpect(__LINE__, smcf_mgi, interrupt_source_pos)
void mgi_interrupt_source_mask_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos);
typedef void (* CMOCK_mgi_interrupt_source_mask_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos, int cmock_num_calls);
void mgi_interrupt_source_mask_AddCallback(CMOCK_mgi_interrupt_source_mask_CALLBACK Callback);
void mgi_interrupt_source_mask_Stub(CMOCK_mgi_interrupt_source_mask_CALLBACK Callback);
#define mgi_interrupt_source_mask_StubWithCallback mgi_interrupt_source_mask_Stub
#define mgi_interrupt_source_mask_ExpectWithArray(smcf_mgi, smcf_mgi_Depth, interrupt_source_pos) mgi_interrupt_source_mask_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth, interrupt_source_pos)
void mgi_interrupt_source_mask_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t interrupt_source_pos);
#define mgi_interrupt_source_mask_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_interrupt_source_mask_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_interrupt_source_mask_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_interrupt_source_mask_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_interrupt_source_mask_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_interrupt_source_mask_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_interrupt_source_mask_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_interrupt_source_mask_IgnoreArg_smcf_mgi() mgi_interrupt_source_mask_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_interrupt_source_mask_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_mask_IgnoreArg_interrupt_source_pos() mgi_interrupt_source_mask_CMockIgnoreArg_interrupt_source_pos(__LINE__)
void mgi_interrupt_source_mask_CMockIgnoreArg_interrupt_source_pos(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_unmask_Ignore() mgi_interrupt_source_unmask_CMockIgnore()
void mgi_interrupt_source_unmask_CMockIgnore(void);
#define mgi_interrupt_source_unmask_StopIgnore() mgi_interrupt_source_unmask_CMockStopIgnore()
void mgi_interrupt_source_unmask_CMockStopIgnore(void);
#define mgi_interrupt_source_unmask_ExpectAnyArgs() mgi_interrupt_source_unmask_CMockExpectAnyArgs(__LINE__)
void mgi_interrupt_source_unmask_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_unmask_Expect(smcf_mgi, interrupt_source_pos) mgi_interrupt_source_unmask_CMockExpect(__LINE__, smcf_mgi, interrupt_source_pos)
void mgi_interrupt_source_unmask_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos);
typedef void (* CMOCK_mgi_interrupt_source_unmask_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, uint32_t interrupt_source_pos, int cmock_num_calls);
void mgi_interrupt_source_unmask_AddCallback(CMOCK_mgi_interrupt_source_unmask_CALLBACK Callback);
void mgi_interrupt_source_unmask_Stub(CMOCK_mgi_interrupt_source_unmask_CALLBACK Callback);
#define mgi_interrupt_source_unmask_StubWithCallback mgi_interrupt_source_unmask_Stub
#define mgi_interrupt_source_unmask_ExpectWithArray(smcf_mgi, smcf_mgi_Depth, interrupt_source_pos) mgi_interrupt_source_unmask_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth, interrupt_source_pos)
void mgi_interrupt_source_unmask_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t interrupt_source_pos);
#define mgi_interrupt_source_unmask_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_interrupt_source_unmask_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_interrupt_source_unmask_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_interrupt_source_unmask_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_interrupt_source_unmask_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_interrupt_source_unmask_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_interrupt_source_unmask_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_interrupt_source_unmask_IgnoreArg_smcf_mgi() mgi_interrupt_source_unmask_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_interrupt_source_unmask_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_interrupt_source_unmask_IgnoreArg_interrupt_source_pos() mgi_interrupt_source_unmask_CMockIgnoreArg_interrupt_source_pos(__LINE__)
void mgi_interrupt_source_unmask_CMockIgnoreArg_interrupt_source_pos(UNITY_LINE_TYPE cmock_line);
#define mgi_is_tag_supported_IgnoreAndReturn(cmock_retval) mgi_is_tag_supported_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_is_tag_supported_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_tag_supported_StopIgnore() mgi_is_tag_supported_CMockStopIgnore()
void mgi_is_tag_supported_CMockStopIgnore(void);
#define mgi_is_tag_supported_ExpectAnyArgsAndReturn(cmock_retval) mgi_is_tag_supported_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_is_tag_supported_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define mgi_is_tag_supported_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_is_tag_supported_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_is_tag_supported_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, bool cmock_to_return);
typedef bool (* CMOCK_mgi_is_tag_supported_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_is_tag_supported_AddCallback(CMOCK_mgi_is_tag_supported_CALLBACK Callback);
void mgi_is_tag_supported_Stub(CMOCK_mgi_is_tag_supported_CALLBACK Callback);
#define mgi_is_tag_supported_StubWithCallback mgi_is_tag_supported_Stub
#define mgi_is_tag_supported_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_is_tag_supported_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_is_tag_supported_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, bool cmock_to_return);
#define mgi_is_tag_supported_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_is_tag_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_is_tag_supported_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_is_tag_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_is_tag_supported_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_is_tag_supported_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_is_tag_supported_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_is_tag_supported_IgnoreArg_smcf_mgi() mgi_is_tag_supported_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_is_tag_supported_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_get_tag_length_in_bits_IgnoreAndReturn(cmock_retval) mgi_get_tag_length_in_bits_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mgi_get_tag_length_in_bits_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_tag_length_in_bits_StopIgnore() mgi_get_tag_length_in_bits_CMockStopIgnore()
void mgi_get_tag_length_in_bits_CMockStopIgnore(void);
#define mgi_get_tag_length_in_bits_ExpectAnyArgsAndReturn(cmock_retval) mgi_get_tag_length_in_bits_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mgi_get_tag_length_in_bits_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define mgi_get_tag_length_in_bits_ExpectAndReturn(smcf_mgi, cmock_retval) mgi_get_tag_length_in_bits_CMockExpectAndReturn(__LINE__, smcf_mgi, cmock_retval)
void mgi_get_tag_length_in_bits_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_mgi_get_tag_length_in_bits_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_get_tag_length_in_bits_AddCallback(CMOCK_mgi_get_tag_length_in_bits_CALLBACK Callback);
void mgi_get_tag_length_in_bits_Stub(CMOCK_mgi_get_tag_length_in_bits_CALLBACK Callback);
#define mgi_get_tag_length_in_bits_StubWithCallback mgi_get_tag_length_in_bits_Stub
#define mgi_get_tag_length_in_bits_ExpectWithArrayAndReturn(smcf_mgi, smcf_mgi_Depth, cmock_retval) mgi_get_tag_length_in_bits_CMockExpectWithArrayAndReturn(__LINE__, smcf_mgi, smcf_mgi_Depth, cmock_retval)
void mgi_get_tag_length_in_bits_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth, uint32_t cmock_to_return);
#define mgi_get_tag_length_in_bits_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_get_tag_length_in_bits_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_get_tag_length_in_bits_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_get_tag_length_in_bits_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_get_tag_length_in_bits_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_get_tag_length_in_bits_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_get_tag_length_in_bits_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_get_tag_length_in_bits_IgnoreArg_smcf_mgi() mgi_get_tag_length_in_bits_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_get_tag_length_in_bits_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_tag_id_write_to_ram_Ignore() mgi_enable_tag_id_write_to_ram_CMockIgnore()
void mgi_enable_tag_id_write_to_ram_CMockIgnore(void);
#define mgi_enable_tag_id_write_to_ram_StopIgnore() mgi_enable_tag_id_write_to_ram_CMockStopIgnore()
void mgi_enable_tag_id_write_to_ram_CMockStopIgnore(void);
#define mgi_enable_tag_id_write_to_ram_ExpectAnyArgs() mgi_enable_tag_id_write_to_ram_CMockExpectAnyArgs(__LINE__)
void mgi_enable_tag_id_write_to_ram_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_tag_id_write_to_ram_Expect(smcf_mgi) mgi_enable_tag_id_write_to_ram_CMockExpect(__LINE__, smcf_mgi)
void mgi_enable_tag_id_write_to_ram_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_enable_tag_id_write_to_ram_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_tag_id_write_to_ram_AddCallback(CMOCK_mgi_enable_tag_id_write_to_ram_CALLBACK Callback);
void mgi_enable_tag_id_write_to_ram_Stub(CMOCK_mgi_enable_tag_id_write_to_ram_CALLBACK Callback);
#define mgi_enable_tag_id_write_to_ram_StubWithCallback mgi_enable_tag_id_write_to_ram_Stub
#define mgi_enable_tag_id_write_to_ram_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_enable_tag_id_write_to_ram_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_enable_tag_id_write_to_ram_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_enable_tag_id_write_to_ram_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_tag_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_tag_id_write_to_ram_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_tag_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_tag_id_write_to_ram_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_tag_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_tag_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_tag_id_write_to_ram_IgnoreArg_smcf_mgi() mgi_enable_tag_id_write_to_ram_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_tag_id_write_to_ram_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_count_id_write_to_ram_Ignore() mgi_enable_count_id_write_to_ram_CMockIgnore()
void mgi_enable_count_id_write_to_ram_CMockIgnore(void);
#define mgi_enable_count_id_write_to_ram_StopIgnore() mgi_enable_count_id_write_to_ram_CMockStopIgnore()
void mgi_enable_count_id_write_to_ram_CMockStopIgnore(void);
#define mgi_enable_count_id_write_to_ram_ExpectAnyArgs() mgi_enable_count_id_write_to_ram_CMockExpectAnyArgs(__LINE__)
void mgi_enable_count_id_write_to_ram_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_count_id_write_to_ram_Expect(smcf_mgi) mgi_enable_count_id_write_to_ram_CMockExpect(__LINE__, smcf_mgi)
void mgi_enable_count_id_write_to_ram_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_enable_count_id_write_to_ram_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_count_id_write_to_ram_AddCallback(CMOCK_mgi_enable_count_id_write_to_ram_CALLBACK Callback);
void mgi_enable_count_id_write_to_ram_Stub(CMOCK_mgi_enable_count_id_write_to_ram_CALLBACK Callback);
#define mgi_enable_count_id_write_to_ram_StubWithCallback mgi_enable_count_id_write_to_ram_Stub
#define mgi_enable_count_id_write_to_ram_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_enable_count_id_write_to_ram_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_enable_count_id_write_to_ram_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_enable_count_id_write_to_ram_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_count_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_count_id_write_to_ram_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_count_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_count_id_write_to_ram_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_count_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_count_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_count_id_write_to_ram_IgnoreArg_smcf_mgi() mgi_enable_count_id_write_to_ram_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_count_id_write_to_ram_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_valid_bits_write_to_ram_Ignore() mgi_enable_valid_bits_write_to_ram_CMockIgnore()
void mgi_enable_valid_bits_write_to_ram_CMockIgnore(void);
#define mgi_enable_valid_bits_write_to_ram_StopIgnore() mgi_enable_valid_bits_write_to_ram_CMockStopIgnore()
void mgi_enable_valid_bits_write_to_ram_CMockStopIgnore(void);
#define mgi_enable_valid_bits_write_to_ram_ExpectAnyArgs() mgi_enable_valid_bits_write_to_ram_CMockExpectAnyArgs(__LINE__)
void mgi_enable_valid_bits_write_to_ram_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_valid_bits_write_to_ram_Expect(smcf_mgi) mgi_enable_valid_bits_write_to_ram_CMockExpect(__LINE__, smcf_mgi)
void mgi_enable_valid_bits_write_to_ram_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_enable_valid_bits_write_to_ram_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_valid_bits_write_to_ram_AddCallback(CMOCK_mgi_enable_valid_bits_write_to_ram_CALLBACK Callback);
void mgi_enable_valid_bits_write_to_ram_Stub(CMOCK_mgi_enable_valid_bits_write_to_ram_CALLBACK Callback);
#define mgi_enable_valid_bits_write_to_ram_StubWithCallback mgi_enable_valid_bits_write_to_ram_Stub
#define mgi_enable_valid_bits_write_to_ram_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_enable_valid_bits_write_to_ram_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_enable_valid_bits_write_to_ram_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_enable_valid_bits_write_to_ram_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_valid_bits_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_valid_bits_write_to_ram_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_valid_bits_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_valid_bits_write_to_ram_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_valid_bits_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_valid_bits_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_valid_bits_write_to_ram_IgnoreArg_smcf_mgi() mgi_enable_valid_bits_write_to_ram_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_valid_bits_write_to_ram_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_group_id_write_to_ram_Ignore() mgi_enable_group_id_write_to_ram_CMockIgnore()
void mgi_enable_group_id_write_to_ram_CMockIgnore(void);
#define mgi_enable_group_id_write_to_ram_StopIgnore() mgi_enable_group_id_write_to_ram_CMockStopIgnore()
void mgi_enable_group_id_write_to_ram_CMockStopIgnore(void);
#define mgi_enable_group_id_write_to_ram_ExpectAnyArgs() mgi_enable_group_id_write_to_ram_CMockExpectAnyArgs(__LINE__)
void mgi_enable_group_id_write_to_ram_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_enable_group_id_write_to_ram_Expect(smcf_mgi) mgi_enable_group_id_write_to_ram_CMockExpect(__LINE__, smcf_mgi)
void mgi_enable_group_id_write_to_ram_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_enable_group_id_write_to_ram_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_enable_group_id_write_to_ram_AddCallback(CMOCK_mgi_enable_group_id_write_to_ram_CALLBACK Callback);
void mgi_enable_group_id_write_to_ram_Stub(CMOCK_mgi_enable_group_id_write_to_ram_CALLBACK Callback);
#define mgi_enable_group_id_write_to_ram_StubWithCallback mgi_enable_group_id_write_to_ram_Stub
#define mgi_enable_group_id_write_to_ram_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_enable_group_id_write_to_ram_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_enable_group_id_write_to_ram_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_enable_group_id_write_to_ram_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_enable_group_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_enable_group_id_write_to_ram_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_enable_group_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_enable_group_id_write_to_ram_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_enable_group_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_enable_group_id_write_to_ram_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_enable_group_id_write_to_ram_IgnoreArg_smcf_mgi() mgi_enable_group_id_write_to_ram_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_enable_group_id_write_to_ram_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_request_start_id_wirte_to_ram_Ignore() mgi_request_start_id_wirte_to_ram_CMockIgnore()
void mgi_request_start_id_wirte_to_ram_CMockIgnore(void);
#define mgi_request_start_id_wirte_to_ram_StopIgnore() mgi_request_start_id_wirte_to_ram_CMockStopIgnore()
void mgi_request_start_id_wirte_to_ram_CMockStopIgnore(void);
#define mgi_request_start_id_wirte_to_ram_ExpectAnyArgs() mgi_request_start_id_wirte_to_ram_CMockExpectAnyArgs(__LINE__)
void mgi_request_start_id_wirte_to_ram_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_request_start_id_wirte_to_ram_Expect(smcf_mgi) mgi_request_start_id_wirte_to_ram_CMockExpect(__LINE__, smcf_mgi)
void mgi_request_start_id_wirte_to_ram_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_request_start_id_wirte_to_ram_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_request_start_id_wirte_to_ram_AddCallback(CMOCK_mgi_request_start_id_wirte_to_ram_CALLBACK Callback);
void mgi_request_start_id_wirte_to_ram_Stub(CMOCK_mgi_request_start_id_wirte_to_ram_CALLBACK Callback);
#define mgi_request_start_id_wirte_to_ram_StubWithCallback mgi_request_start_id_wirte_to_ram_Stub
#define mgi_request_start_id_wirte_to_ram_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_request_start_id_wirte_to_ram_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_request_start_id_wirte_to_ram_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_request_start_id_wirte_to_ram_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_request_start_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_request_start_id_wirte_to_ram_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_request_start_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_request_start_id_wirte_to_ram_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_request_start_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_request_start_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_request_start_id_wirte_to_ram_IgnoreArg_smcf_mgi() mgi_request_start_id_wirte_to_ram_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_request_start_id_wirte_to_ram_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);
#define mgi_request_start_and_end_id_wirte_to_ram_Ignore() mgi_request_start_and_end_id_wirte_to_ram_CMockIgnore()
void mgi_request_start_and_end_id_wirte_to_ram_CMockIgnore(void);
#define mgi_request_start_and_end_id_wirte_to_ram_StopIgnore() mgi_request_start_and_end_id_wirte_to_ram_CMockStopIgnore()
void mgi_request_start_and_end_id_wirte_to_ram_CMockStopIgnore(void);
#define mgi_request_start_and_end_id_wirte_to_ram_ExpectAnyArgs() mgi_request_start_and_end_id_wirte_to_ram_CMockExpectAnyArgs(__LINE__)
void mgi_request_start_and_end_id_wirte_to_ram_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mgi_request_start_and_end_id_wirte_to_ram_Expect(smcf_mgi) mgi_request_start_and_end_id_wirte_to_ram_CMockExpect(__LINE__, smcf_mgi)
void mgi_request_start_and_end_id_wirte_to_ram_CMockExpect(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi);
typedef void (* CMOCK_mgi_request_start_and_end_id_wirte_to_ram_CALLBACK)(struct smcf_mgi_reg* smcf_mgi, int cmock_num_calls);
void mgi_request_start_and_end_id_wirte_to_ram_AddCallback(CMOCK_mgi_request_start_and_end_id_wirte_to_ram_CALLBACK Callback);
void mgi_request_start_and_end_id_wirte_to_ram_Stub(CMOCK_mgi_request_start_and_end_id_wirte_to_ram_CALLBACK Callback);
#define mgi_request_start_and_end_id_wirte_to_ram_StubWithCallback mgi_request_start_and_end_id_wirte_to_ram_Stub
#define mgi_request_start_and_end_id_wirte_to_ram_ExpectWithArray(smcf_mgi, smcf_mgi_Depth) mgi_request_start_and_end_id_wirte_to_ram_CMockExpectWithArray(__LINE__, smcf_mgi, smcf_mgi_Depth)
void mgi_request_start_and_end_id_wirte_to_ram_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, int smcf_mgi_Depth);
#define mgi_request_start_and_end_id_wirte_to_ram_ReturnThruPtr_smcf_mgi(smcf_mgi) mgi_request_start_and_end_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, sizeof(struct smcf_mgi_reg))
#define mgi_request_start_and_end_id_wirte_to_ram_ReturnArrayThruPtr_smcf_mgi(smcf_mgi, cmock_len) mgi_request_start_and_end_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_len * sizeof(*smcf_mgi))
#define mgi_request_start_and_end_id_wirte_to_ram_ReturnMemThruPtr_smcf_mgi(smcf_mgi, cmock_size) mgi_request_start_and_end_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(__LINE__, smcf_mgi, cmock_size)
void mgi_request_start_and_end_id_wirte_to_ram_CMockReturnMemThruPtr_smcf_mgi(UNITY_LINE_TYPE cmock_line, struct smcf_mgi_reg* smcf_mgi, size_t cmock_size);
#define mgi_request_start_and_end_id_wirte_to_ram_IgnoreArg_smcf_mgi() mgi_request_start_and_end_id_wirte_to_ram_CMockIgnoreArg_smcf_mgi(__LINE__)
void mgi_request_start_and_end_id_wirte_to_ram_CMockIgnoreArg_smcf_mgi(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
