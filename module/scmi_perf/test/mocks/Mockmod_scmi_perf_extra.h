/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_SCMI_PERF_EXTRA_H
#define _MOCKMOD_SCMI_PERF_EXTRA_H

#include "unity.h"
#include "mod_scmi_perf_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_scmi_perf_extra_Init(void);
void Mockmod_scmi_perf_extra_Destroy(void);
void Mockmod_scmi_perf_extra_Verify(void);




#define mod_scmi_from_protocol_api_get_agent_count_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_get_agent_count_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_get_agent_count_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_get_agent_count_ExpectAndReturn(agent_count, cmock_retval) mod_scmi_from_protocol_api_get_agent_count_CMockExpectAndReturn(__LINE__, agent_count, cmock_retval)
void mod_scmi_from_protocol_api_get_agent_count_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_get_agent_count_CALLBACK)(unsigned int* agent_count, int cmock_num_calls);
void mod_scmi_from_protocol_api_get_agent_count_AddCallback(CMOCK_mod_scmi_from_protocol_api_get_agent_count_CALLBACK Callback);
void mod_scmi_from_protocol_api_get_agent_count_Stub(CMOCK_mod_scmi_from_protocol_api_get_agent_count_CALLBACK Callback);
#define mod_scmi_from_protocol_api_get_agent_count_StubWithCallback mod_scmi_from_protocol_api_get_agent_count_Stub
#define mod_scmi_from_protocol_api_get_agent_count_ReturnThruPtr_agent_count(agent_count) mod_scmi_from_protocol_api_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, sizeof(unsigned int))
#define mod_scmi_from_protocol_api_get_agent_count_ReturnArrayThruPtr_agent_count(agent_count, cmock_len) mod_scmi_from_protocol_api_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, cmock_len * sizeof(*agent_count))
#define mod_scmi_from_protocol_api_get_agent_count_ReturnMemThruPtr_agent_count(agent_count, cmock_size) mod_scmi_from_protocol_api_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, cmock_size)
void mod_scmi_from_protocol_api_get_agent_count_CMockReturnMemThruPtr_agent_count(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, size_t cmock_size);
#define mod_scmi_from_protocol_api_get_agent_id_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_get_agent_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_get_agent_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_get_agent_id_ExpectAndReturn(service_id, agent_id, cmock_retval) mod_scmi_from_protocol_api_get_agent_id_CMockExpectAndReturn(__LINE__, service_id, agent_id, cmock_retval)
void mod_scmi_from_protocol_api_get_agent_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, unsigned int* agent_id, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_get_agent_id_CALLBACK)(fwk_id_t service_id, unsigned int* agent_id, int cmock_num_calls);
void mod_scmi_from_protocol_api_get_agent_id_AddCallback(CMOCK_mod_scmi_from_protocol_api_get_agent_id_CALLBACK Callback);
void mod_scmi_from_protocol_api_get_agent_id_Stub(CMOCK_mod_scmi_from_protocol_api_get_agent_id_CALLBACK Callback);
#define mod_scmi_from_protocol_api_get_agent_id_StubWithCallback mod_scmi_from_protocol_api_get_agent_id_Stub
#define mod_scmi_from_protocol_api_get_agent_id_ReturnThruPtr_agent_id(agent_id) mod_scmi_from_protocol_api_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, sizeof(unsigned int))
#define mod_scmi_from_protocol_api_get_agent_id_ReturnArrayThruPtr_agent_id(agent_id, cmock_len) mod_scmi_from_protocol_api_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, cmock_len * sizeof(*agent_id))
#define mod_scmi_from_protocol_api_get_agent_id_ReturnMemThruPtr_agent_id(agent_id, cmock_size) mod_scmi_from_protocol_api_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, cmock_size)
void mod_scmi_from_protocol_api_get_agent_id_CMockReturnMemThruPtr_agent_id(UNITY_LINE_TYPE cmock_line, unsigned int* agent_id, size_t cmock_size);
#define mod_scmi_from_protocol_api_get_agent_type_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_get_agent_type_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_get_agent_type_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_get_agent_type_ExpectAndReturn(agent_id, agent_type, cmock_retval) mod_scmi_from_protocol_api_get_agent_type_CMockExpectAndReturn(__LINE__, agent_id, agent_type, cmock_retval)
void mod_scmi_from_protocol_api_get_agent_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t agent_id, enum scmi_agent_type* agent_type, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_get_agent_type_CALLBACK)(uint32_t agent_id, enum scmi_agent_type* agent_type, int cmock_num_calls);
void mod_scmi_from_protocol_api_get_agent_type_AddCallback(CMOCK_mod_scmi_from_protocol_api_get_agent_type_CALLBACK Callback);
void mod_scmi_from_protocol_api_get_agent_type_Stub(CMOCK_mod_scmi_from_protocol_api_get_agent_type_CALLBACK Callback);
#define mod_scmi_from_protocol_api_get_agent_type_StubWithCallback mod_scmi_from_protocol_api_get_agent_type_Stub
#define mod_scmi_from_protocol_api_get_agent_type_ReturnThruPtr_agent_type(agent_type) mod_scmi_from_protocol_api_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, sizeof(enum scmi_agent_type))
#define mod_scmi_from_protocol_api_get_agent_type_ReturnArrayThruPtr_agent_type(agent_type, cmock_len) mod_scmi_from_protocol_api_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, cmock_len * sizeof(*agent_type))
#define mod_scmi_from_protocol_api_get_agent_type_ReturnMemThruPtr_agent_type(agent_type, cmock_size) mod_scmi_from_protocol_api_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, cmock_size)
void mod_scmi_from_protocol_api_get_agent_type_CMockReturnMemThruPtr_agent_type(UNITY_LINE_TYPE cmock_line, enum scmi_agent_type* agent_type, size_t cmock_size);
#define mod_scmi_from_protocol_api_get_max_payload_size_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_get_max_payload_size_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_get_max_payload_size_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_get_max_payload_size_ExpectAndReturn(service_id, size, cmock_retval) mod_scmi_from_protocol_api_get_max_payload_size_CMockExpectAndReturn(__LINE__, service_id, size, cmock_retval)
void mod_scmi_from_protocol_api_get_max_payload_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t* size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_get_max_payload_size_CALLBACK)(fwk_id_t service_id, size_t* size, int cmock_num_calls);
void mod_scmi_from_protocol_api_get_max_payload_size_AddCallback(CMOCK_mod_scmi_from_protocol_api_get_max_payload_size_CALLBACK Callback);
void mod_scmi_from_protocol_api_get_max_payload_size_Stub(CMOCK_mod_scmi_from_protocol_api_get_max_payload_size_CALLBACK Callback);
#define mod_scmi_from_protocol_api_get_max_payload_size_StubWithCallback mod_scmi_from_protocol_api_get_max_payload_size_Stub
#define mod_scmi_from_protocol_api_get_max_payload_size_ReturnThruPtr_size(size) mod_scmi_from_protocol_api_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, sizeof(size_t))
#define mod_scmi_from_protocol_api_get_max_payload_size_ReturnArrayThruPtr_size(size, cmock_len) mod_scmi_from_protocol_api_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_len * sizeof(*size))
#define mod_scmi_from_protocol_api_get_max_payload_size_ReturnMemThruPtr_size(size, cmock_size) mod_scmi_from_protocol_api_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_size)
void mod_scmi_from_protocol_api_get_max_payload_size_CMockReturnMemThruPtr_size(UNITY_LINE_TYPE cmock_line, size_t* size, size_t cmock_size);
#define mod_scmi_from_protocol_api_write_payload_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_write_payload_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_write_payload_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_write_payload_ExpectAndReturn(service_id, offset, payload, size, cmock_retval) mod_scmi_from_protocol_api_write_payload_CMockExpectAndReturn(__LINE__, service_id, offset, payload, size, cmock_retval)
void mod_scmi_from_protocol_api_write_payload_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t offset, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_write_payload_CALLBACK)(fwk_id_t service_id, size_t offset, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_from_protocol_api_write_payload_AddCallback(CMOCK_mod_scmi_from_protocol_api_write_payload_CALLBACK Callback);
void mod_scmi_from_protocol_api_write_payload_Stub(CMOCK_mod_scmi_from_protocol_api_write_payload_CALLBACK Callback);
#define mod_scmi_from_protocol_api_write_payload_StubWithCallback mod_scmi_from_protocol_api_write_payload_Stub
#define mod_scmi_from_protocol_api_respond_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_respond_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_respond_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_respond_ExpectAndReturn(service_id, payload, size, cmock_retval) mod_scmi_from_protocol_api_respond_CMockExpectAndReturn(__LINE__, service_id, payload, size, cmock_retval)
void mod_scmi_from_protocol_api_respond_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_respond_CALLBACK)(fwk_id_t service_id, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_from_protocol_api_respond_AddCallback(CMOCK_mod_scmi_from_protocol_api_respond_CALLBACK Callback);
void mod_scmi_from_protocol_api_respond_Stub(CMOCK_mod_scmi_from_protocol_api_respond_CALLBACK Callback);
#define mod_scmi_from_protocol_api_respond_StubWithCallback mod_scmi_from_protocol_api_respond_Stub
#define mod_scmi_from_protocol_api_notify_ExpectAnyArgs() mod_scmi_from_protocol_api_notify_CMockExpectAnyArgs(__LINE__)
void mod_scmi_from_protocol_api_notify_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mod_scmi_from_protocol_api_notify_Expect(service_id, protocol_id, message_id, payload, size) mod_scmi_from_protocol_api_notify_CMockExpect(__LINE__, service_id, protocol_id, message_id, payload, size)
void mod_scmi_from_protocol_api_notify_CMockExpect(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, int protocol_id, int message_id, const void* payload, size_t size);
typedef void (* CMOCK_mod_scmi_from_protocol_api_notify_CALLBACK)(fwk_id_t service_id, int protocol_id, int message_id, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_from_protocol_api_notify_AddCallback(CMOCK_mod_scmi_from_protocol_api_notify_CALLBACK Callback);
void mod_scmi_from_protocol_api_notify_Stub(CMOCK_mod_scmi_from_protocol_api_notify_CALLBACK Callback);
#define mod_scmi_from_protocol_api_notify_StubWithCallback mod_scmi_from_protocol_api_notify_Stub
#define mod_scmi_from_protocol_api_scmi_send_message_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_scmi_send_message_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_scmi_send_message_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_scmi_send_message_ExpectAndReturn(scmi_message_id, scmi_protocol_id, token, service_id, payload, payload_size, request_ack_by_interrupt, cmock_retval) mod_scmi_from_protocol_api_scmi_send_message_CMockExpectAndReturn(__LINE__, scmi_message_id, scmi_protocol_id, token, service_id, payload, payload_size, request_ack_by_interrupt, cmock_retval)
void mod_scmi_from_protocol_api_scmi_send_message_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t scmi_message_id, uint8_t scmi_protocol_id, uint8_t token, fwk_id_t service_id, const void* payload, size_t payload_size, bool request_ack_by_interrupt, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_scmi_send_message_CALLBACK)(uint8_t scmi_message_id, uint8_t scmi_protocol_id, uint8_t token, fwk_id_t service_id, const void* payload, size_t payload_size, bool request_ack_by_interrupt, int cmock_num_calls);
void mod_scmi_from_protocol_api_scmi_send_message_AddCallback(CMOCK_mod_scmi_from_protocol_api_scmi_send_message_CALLBACK Callback);
void mod_scmi_from_protocol_api_scmi_send_message_Stub(CMOCK_mod_scmi_from_protocol_api_scmi_send_message_CALLBACK Callback);
#define mod_scmi_from_protocol_api_scmi_send_message_StubWithCallback mod_scmi_from_protocol_api_scmi_send_message_Stub
#define mod_scmi_from_protocol_api_response_message_handler_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_api_response_message_handler_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_api_response_message_handler_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_api_response_message_handler_ExpectAndReturn(service_id, cmock_retval) mod_scmi_from_protocol_api_response_message_handler_CMockExpectAndReturn(__LINE__, service_id, cmock_retval)
void mod_scmi_from_protocol_api_response_message_handler_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_api_response_message_handler_CALLBACK)(fwk_id_t service_id, int cmock_num_calls);
void mod_scmi_from_protocol_api_response_message_handler_AddCallback(CMOCK_mod_scmi_from_protocol_api_response_message_handler_CALLBACK Callback);
void mod_scmi_from_protocol_api_response_message_handler_Stub(CMOCK_mod_scmi_from_protocol_api_response_message_handler_CALLBACK Callback);
#define mod_scmi_from_protocol_api_response_message_handler_StubWithCallback mod_scmi_from_protocol_api_response_message_handler_Stub
#define mod_dvfs_domain_api_get_current_opp_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_get_current_opp_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_get_current_opp_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_get_current_opp_ExpectAndReturn(domain_id, opp, cmock_retval) mod_dvfs_domain_api_get_current_opp_CMockExpectAndReturn(__LINE__, domain_id, opp, cmock_retval)
void mod_dvfs_domain_api_get_current_opp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, struct mod_dvfs_opp* opp, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_get_current_opp_CALLBACK)(fwk_id_t domain_id, struct mod_dvfs_opp* opp, int cmock_num_calls);
void mod_dvfs_domain_api_get_current_opp_AddCallback(CMOCK_mod_dvfs_domain_api_get_current_opp_CALLBACK Callback);
void mod_dvfs_domain_api_get_current_opp_Stub(CMOCK_mod_dvfs_domain_api_get_current_opp_CALLBACK Callback);
#define mod_dvfs_domain_api_get_current_opp_StubWithCallback mod_dvfs_domain_api_get_current_opp_Stub
#define mod_dvfs_domain_api_get_current_opp_ReturnThruPtr_opp(opp) mod_dvfs_domain_api_get_current_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, sizeof(struct mod_dvfs_opp))
#define mod_dvfs_domain_api_get_current_opp_ReturnArrayThruPtr_opp(opp, cmock_len) mod_dvfs_domain_api_get_current_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, cmock_len * sizeof(*opp))
#define mod_dvfs_domain_api_get_current_opp_ReturnMemThruPtr_opp(opp, cmock_size) mod_dvfs_domain_api_get_current_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, cmock_size)
void mod_dvfs_domain_api_get_current_opp_CMockReturnMemThruPtr_opp(UNITY_LINE_TYPE cmock_line, struct mod_dvfs_opp* opp, size_t cmock_size);
#define mod_dvfs_domain_api_get_sustained_opp_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_get_sustained_opp_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_get_sustained_opp_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_get_sustained_opp_ExpectAndReturn(domain_id, opp, cmock_retval) mod_dvfs_domain_api_get_sustained_opp_CMockExpectAndReturn(__LINE__, domain_id, opp, cmock_retval)
void mod_dvfs_domain_api_get_sustained_opp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, struct mod_dvfs_opp* opp, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_get_sustained_opp_CALLBACK)(fwk_id_t domain_id, struct mod_dvfs_opp* opp, int cmock_num_calls);
void mod_dvfs_domain_api_get_sustained_opp_AddCallback(CMOCK_mod_dvfs_domain_api_get_sustained_opp_CALLBACK Callback);
void mod_dvfs_domain_api_get_sustained_opp_Stub(CMOCK_mod_dvfs_domain_api_get_sustained_opp_CALLBACK Callback);
#define mod_dvfs_domain_api_get_sustained_opp_StubWithCallback mod_dvfs_domain_api_get_sustained_opp_Stub
#define mod_dvfs_domain_api_get_sustained_opp_ReturnThruPtr_opp(opp) mod_dvfs_domain_api_get_sustained_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, sizeof(struct mod_dvfs_opp))
#define mod_dvfs_domain_api_get_sustained_opp_ReturnArrayThruPtr_opp(opp, cmock_len) mod_dvfs_domain_api_get_sustained_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, cmock_len * sizeof(*opp))
#define mod_dvfs_domain_api_get_sustained_opp_ReturnMemThruPtr_opp(opp, cmock_size) mod_dvfs_domain_api_get_sustained_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, cmock_size)
void mod_dvfs_domain_api_get_sustained_opp_CMockReturnMemThruPtr_opp(UNITY_LINE_TYPE cmock_line, struct mod_dvfs_opp* opp, size_t cmock_size);
#define mod_dvfs_domain_api_get_nth_opp_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_get_nth_opp_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_get_nth_opp_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_get_nth_opp_ExpectAndReturn(domain_id, n, opp, cmock_retval) mod_dvfs_domain_api_get_nth_opp_CMockExpectAndReturn(__LINE__, domain_id, n, opp, cmock_retval)
void mod_dvfs_domain_api_get_nth_opp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, size_t n, struct mod_dvfs_opp* opp, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_get_nth_opp_CALLBACK)(fwk_id_t domain_id, size_t n, struct mod_dvfs_opp* opp, int cmock_num_calls);
void mod_dvfs_domain_api_get_nth_opp_AddCallback(CMOCK_mod_dvfs_domain_api_get_nth_opp_CALLBACK Callback);
void mod_dvfs_domain_api_get_nth_opp_Stub(CMOCK_mod_dvfs_domain_api_get_nth_opp_CALLBACK Callback);
#define mod_dvfs_domain_api_get_nth_opp_StubWithCallback mod_dvfs_domain_api_get_nth_opp_Stub
#define mod_dvfs_domain_api_get_nth_opp_ReturnThruPtr_opp(opp) mod_dvfs_domain_api_get_nth_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, sizeof(struct mod_dvfs_opp))
#define mod_dvfs_domain_api_get_nth_opp_ReturnArrayThruPtr_opp(opp, cmock_len) mod_dvfs_domain_api_get_nth_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, cmock_len * sizeof(*opp))
#define mod_dvfs_domain_api_get_nth_opp_ReturnMemThruPtr_opp(opp, cmock_size) mod_dvfs_domain_api_get_nth_opp_CMockReturnMemThruPtr_opp(__LINE__, opp, cmock_size)
void mod_dvfs_domain_api_get_nth_opp_CMockReturnMemThruPtr_opp(UNITY_LINE_TYPE cmock_line, struct mod_dvfs_opp* opp, size_t cmock_size);
#define mod_dvfs_domain_api_get_opp_count_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_get_opp_count_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_get_opp_count_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_get_opp_count_ExpectAndReturn(domain_id, opp_count, cmock_retval) mod_dvfs_domain_api_get_opp_count_CMockExpectAndReturn(__LINE__, domain_id, opp_count, cmock_retval)
void mod_dvfs_domain_api_get_opp_count_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, size_t* opp_count, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_get_opp_count_CALLBACK)(fwk_id_t domain_id, size_t* opp_count, int cmock_num_calls);
void mod_dvfs_domain_api_get_opp_count_AddCallback(CMOCK_mod_dvfs_domain_api_get_opp_count_CALLBACK Callback);
void mod_dvfs_domain_api_get_opp_count_Stub(CMOCK_mod_dvfs_domain_api_get_opp_count_CALLBACK Callback);
#define mod_dvfs_domain_api_get_opp_count_StubWithCallback mod_dvfs_domain_api_get_opp_count_Stub
#define mod_dvfs_domain_api_get_opp_count_ReturnThruPtr_opp_count(opp_count) mod_dvfs_domain_api_get_opp_count_CMockReturnMemThruPtr_opp_count(__LINE__, opp_count, sizeof(size_t))
#define mod_dvfs_domain_api_get_opp_count_ReturnArrayThruPtr_opp_count(opp_count, cmock_len) mod_dvfs_domain_api_get_opp_count_CMockReturnMemThruPtr_opp_count(__LINE__, opp_count, cmock_len * sizeof(*opp_count))
#define mod_dvfs_domain_api_get_opp_count_ReturnMemThruPtr_opp_count(opp_count, cmock_size) mod_dvfs_domain_api_get_opp_count_CMockReturnMemThruPtr_opp_count(__LINE__, opp_count, cmock_size)
void mod_dvfs_domain_api_get_opp_count_CMockReturnMemThruPtr_opp_count(UNITY_LINE_TYPE cmock_line, size_t* opp_count, size_t cmock_size);
#define mod_dvfs_domain_api_get_level_id_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_get_level_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_get_level_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_get_level_id_ExpectAndReturn(domain_id, level, level_id, cmock_retval) mod_dvfs_domain_api_get_level_id_CMockExpectAndReturn(__LINE__, domain_id, level, level_id, cmock_retval)
void mod_dvfs_domain_api_get_level_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, uint32_t level, size_t* level_id, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_get_level_id_CALLBACK)(fwk_id_t domain_id, uint32_t level, size_t* level_id, int cmock_num_calls);
void mod_dvfs_domain_api_get_level_id_AddCallback(CMOCK_mod_dvfs_domain_api_get_level_id_CALLBACK Callback);
void mod_dvfs_domain_api_get_level_id_Stub(CMOCK_mod_dvfs_domain_api_get_level_id_CALLBACK Callback);
#define mod_dvfs_domain_api_get_level_id_StubWithCallback mod_dvfs_domain_api_get_level_id_Stub
#define mod_dvfs_domain_api_get_level_id_ReturnThruPtr_level_id(level_id) mod_dvfs_domain_api_get_level_id_CMockReturnMemThruPtr_level_id(__LINE__, level_id, sizeof(size_t))
#define mod_dvfs_domain_api_get_level_id_ReturnArrayThruPtr_level_id(level_id, cmock_len) mod_dvfs_domain_api_get_level_id_CMockReturnMemThruPtr_level_id(__LINE__, level_id, cmock_len * sizeof(*level_id))
#define mod_dvfs_domain_api_get_level_id_ReturnMemThruPtr_level_id(level_id, cmock_size) mod_dvfs_domain_api_get_level_id_CMockReturnMemThruPtr_level_id(__LINE__, level_id, cmock_size)
void mod_dvfs_domain_api_get_level_id_CMockReturnMemThruPtr_level_id(UNITY_LINE_TYPE cmock_line, size_t* level_id, size_t cmock_size);
#define mod_dvfs_domain_api_get_latency_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_get_latency_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_get_latency_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_get_latency_ExpectAndReturn(domain_id, latency, cmock_retval) mod_dvfs_domain_api_get_latency_CMockExpectAndReturn(__LINE__, domain_id, latency, cmock_retval)
void mod_dvfs_domain_api_get_latency_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, uint16_t* latency, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_get_latency_CALLBACK)(fwk_id_t domain_id, uint16_t* latency, int cmock_num_calls);
void mod_dvfs_domain_api_get_latency_AddCallback(CMOCK_mod_dvfs_domain_api_get_latency_CALLBACK Callback);
void mod_dvfs_domain_api_get_latency_Stub(CMOCK_mod_dvfs_domain_api_get_latency_CALLBACK Callback);
#define mod_dvfs_domain_api_get_latency_StubWithCallback mod_dvfs_domain_api_get_latency_Stub
#define mod_dvfs_domain_api_get_latency_ReturnThruPtr_latency(latency) mod_dvfs_domain_api_get_latency_CMockReturnMemThruPtr_latency(__LINE__, latency, sizeof(uint16_t))
#define mod_dvfs_domain_api_get_latency_ReturnArrayThruPtr_latency(latency, cmock_len) mod_dvfs_domain_api_get_latency_CMockReturnMemThruPtr_latency(__LINE__, latency, cmock_len * sizeof(*latency))
#define mod_dvfs_domain_api_get_latency_ReturnMemThruPtr_latency(latency, cmock_size) mod_dvfs_domain_api_get_latency_CMockReturnMemThruPtr_latency(__LINE__, latency, cmock_size)
void mod_dvfs_domain_api_get_latency_CMockReturnMemThruPtr_latency(UNITY_LINE_TYPE cmock_line, uint16_t* latency, size_t cmock_size);
#define mod_dvfs_domain_api_set_level_ExpectAnyArgsAndReturn(cmock_retval) mod_dvfs_domain_api_set_level_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_dvfs_domain_api_set_level_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_dvfs_domain_api_set_level_ExpectAndReturn(domain_id, cookie, level, cmock_retval) mod_dvfs_domain_api_set_level_CMockExpectAndReturn(__LINE__, domain_id, cookie, level, cmock_retval)
void mod_dvfs_domain_api_set_level_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t domain_id, uintptr_t cookie, uint32_t level, int cmock_to_return);
typedef int (* CMOCK_mod_dvfs_domain_api_set_level_CALLBACK)(fwk_id_t domain_id, uintptr_t cookie, uint32_t level, int cmock_num_calls);
void mod_dvfs_domain_api_set_level_AddCallback(CMOCK_mod_dvfs_domain_api_set_level_CALLBACK Callback);
void mod_dvfs_domain_api_set_level_Stub(CMOCK_mod_dvfs_domain_api_set_level_CALLBACK Callback);
#define mod_dvfs_domain_api_set_level_StubWithCallback mod_dvfs_domain_api_set_level_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
