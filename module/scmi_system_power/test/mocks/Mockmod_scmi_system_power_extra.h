/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_SCMI_SYSTEM_POWER_EXTRA_H
#define _MOCKMOD_SCMI_SYSTEM_POWER_EXTRA_H

#include "unity.h"
#include "mod_scmi_system_power_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_scmi_system_power_extra_Init(void);
void Mockmod_scmi_system_power_extra_Destroy(void);
void Mockmod_scmi_system_power_extra_Verify(void);




#define power_domain_get_domain_type_IgnoreAndReturn(cmock_retval) power_domain_get_domain_type_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_get_domain_type_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_get_domain_type_StopIgnore() power_domain_get_domain_type_CMockStopIgnore()
void power_domain_get_domain_type_CMockStopIgnore(void);
#define power_domain_get_domain_type_ExpectAnyArgsAndReturn(cmock_retval) power_domain_get_domain_type_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_get_domain_type_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_get_domain_type_ExpectAndReturn(pd_id, type, cmock_retval) power_domain_get_domain_type_CMockExpectAndReturn(__LINE__, pd_id, type, cmock_retval)
void power_domain_get_domain_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, enum mod_pd_type* type, int cmock_to_return);
typedef int (* CMOCK_power_domain_get_domain_type_CALLBACK)(fwk_id_t pd_id, enum mod_pd_type* type, int cmock_num_calls);
void power_domain_get_domain_type_AddCallback(CMOCK_power_domain_get_domain_type_CALLBACK Callback);
void power_domain_get_domain_type_Stub(CMOCK_power_domain_get_domain_type_CALLBACK Callback);
#define power_domain_get_domain_type_StubWithCallback power_domain_get_domain_type_Stub
#define power_domain_get_domain_type_ExpectWithArrayAndReturn(pd_id, type, type_Depth, cmock_retval) power_domain_get_domain_type_CMockExpectWithArrayAndReturn(__LINE__, pd_id, type, type_Depth, cmock_retval)
void power_domain_get_domain_type_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, enum mod_pd_type* type, int type_Depth, int cmock_to_return);
#define power_domain_get_domain_type_ReturnThruPtr_type(type) power_domain_get_domain_type_CMockReturnMemThruPtr_type(__LINE__, type, sizeof(enum mod_pd_type))
#define power_domain_get_domain_type_ReturnArrayThruPtr_type(type, cmock_len) power_domain_get_domain_type_CMockReturnMemThruPtr_type(__LINE__, type, cmock_len * sizeof(*type))
#define power_domain_get_domain_type_ReturnMemThruPtr_type(type, cmock_size) power_domain_get_domain_type_CMockReturnMemThruPtr_type(__LINE__, type, cmock_size)
void power_domain_get_domain_type_CMockReturnMemThruPtr_type(UNITY_LINE_TYPE cmock_line, enum mod_pd_type* type, size_t cmock_size);
#define power_domain_get_domain_type_IgnoreArg_pd_id() power_domain_get_domain_type_CMockIgnoreArg_pd_id(__LINE__)
void power_domain_get_domain_type_CMockIgnoreArg_pd_id(UNITY_LINE_TYPE cmock_line);
#define power_domain_get_domain_type_IgnoreArg_type() power_domain_get_domain_type_CMockIgnoreArg_type(__LINE__)
void power_domain_get_domain_type_CMockIgnoreArg_type(UNITY_LINE_TYPE cmock_line);
#define power_domain_get_domain_parent_id_IgnoreAndReturn(cmock_retval) power_domain_get_domain_parent_id_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_get_domain_parent_id_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_get_domain_parent_id_StopIgnore() power_domain_get_domain_parent_id_CMockStopIgnore()
void power_domain_get_domain_parent_id_CMockStopIgnore(void);
#define power_domain_get_domain_parent_id_ExpectAnyArgsAndReturn(cmock_retval) power_domain_get_domain_parent_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_get_domain_parent_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_get_domain_parent_id_ExpectAndReturn(pd_id, parent_pd_id, cmock_retval) power_domain_get_domain_parent_id_CMockExpectAndReturn(__LINE__, pd_id, parent_pd_id, cmock_retval)
void power_domain_get_domain_parent_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, fwk_id_t* parent_pd_id, int cmock_to_return);
typedef int (* CMOCK_power_domain_get_domain_parent_id_CALLBACK)(fwk_id_t pd_id, fwk_id_t* parent_pd_id, int cmock_num_calls);
void power_domain_get_domain_parent_id_AddCallback(CMOCK_power_domain_get_domain_parent_id_CALLBACK Callback);
void power_domain_get_domain_parent_id_Stub(CMOCK_power_domain_get_domain_parent_id_CALLBACK Callback);
#define power_domain_get_domain_parent_id_StubWithCallback power_domain_get_domain_parent_id_Stub
#define power_domain_get_domain_parent_id_ExpectWithArrayAndReturn(pd_id, parent_pd_id, parent_pd_id_Depth, cmock_retval) power_domain_get_domain_parent_id_CMockExpectWithArrayAndReturn(__LINE__, pd_id, parent_pd_id, parent_pd_id_Depth, cmock_retval)
void power_domain_get_domain_parent_id_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, fwk_id_t* parent_pd_id, int parent_pd_id_Depth, int cmock_to_return);
#define power_domain_get_domain_parent_id_ReturnThruPtr_parent_pd_id(parent_pd_id) power_domain_get_domain_parent_id_CMockReturnMemThruPtr_parent_pd_id(__LINE__, parent_pd_id, sizeof(fwk_id_t))
#define power_domain_get_domain_parent_id_ReturnArrayThruPtr_parent_pd_id(parent_pd_id, cmock_len) power_domain_get_domain_parent_id_CMockReturnMemThruPtr_parent_pd_id(__LINE__, parent_pd_id, cmock_len * sizeof(*parent_pd_id))
#define power_domain_get_domain_parent_id_ReturnMemThruPtr_parent_pd_id(parent_pd_id, cmock_size) power_domain_get_domain_parent_id_CMockReturnMemThruPtr_parent_pd_id(__LINE__, parent_pd_id, cmock_size)
void power_domain_get_domain_parent_id_CMockReturnMemThruPtr_parent_pd_id(UNITY_LINE_TYPE cmock_line, fwk_id_t* parent_pd_id, size_t cmock_size);
#define power_domain_get_domain_parent_id_IgnoreArg_pd_id() power_domain_get_domain_parent_id_CMockIgnoreArg_pd_id(__LINE__)
void power_domain_get_domain_parent_id_CMockIgnoreArg_pd_id(UNITY_LINE_TYPE cmock_line);
#define power_domain_get_domain_parent_id_IgnoreArg_parent_pd_id() power_domain_get_domain_parent_id_CMockIgnoreArg_parent_pd_id(__LINE__)
void power_domain_get_domain_parent_id_CMockIgnoreArg_parent_pd_id(UNITY_LINE_TYPE cmock_line);
#define power_domain_set_state_IgnoreAndReturn(cmock_retval) power_domain_set_state_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_set_state_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_set_state_StopIgnore() power_domain_set_state_CMockStopIgnore()
void power_domain_set_state_CMockStopIgnore(void);
#define power_domain_set_state_ExpectAnyArgsAndReturn(cmock_retval) power_domain_set_state_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_set_state_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_set_state_ExpectAndReturn(pd_id, resp_requested, state, cmock_retval) power_domain_set_state_CMockExpectAndReturn(__LINE__, pd_id, resp_requested, state, cmock_retval)
void power_domain_set_state_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, bool resp_requested, uint32_t state, int cmock_to_return);
typedef int (* CMOCK_power_domain_set_state_CALLBACK)(fwk_id_t pd_id, bool resp_requested, uint32_t state, int cmock_num_calls);
void power_domain_set_state_AddCallback(CMOCK_power_domain_set_state_CALLBACK Callback);
void power_domain_set_state_Stub(CMOCK_power_domain_set_state_CALLBACK Callback);
#define power_domain_set_state_StubWithCallback power_domain_set_state_Stub
#define power_domain_set_state_IgnoreArg_pd_id() power_domain_set_state_CMockIgnoreArg_pd_id(__LINE__)
void power_domain_set_state_CMockIgnoreArg_pd_id(UNITY_LINE_TYPE cmock_line);
#define power_domain_set_state_IgnoreArg_resp_requested() power_domain_set_state_CMockIgnoreArg_resp_requested(__LINE__)
void power_domain_set_state_CMockIgnoreArg_resp_requested(UNITY_LINE_TYPE cmock_line);
#define power_domain_set_state_IgnoreArg_state() power_domain_set_state_CMockIgnoreArg_state(__LINE__)
void power_domain_set_state_CMockIgnoreArg_state(UNITY_LINE_TYPE cmock_line);
#define power_domain_get_state_IgnoreAndReturn(cmock_retval) power_domain_get_state_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_get_state_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_get_state_StopIgnore() power_domain_get_state_CMockStopIgnore()
void power_domain_get_state_CMockStopIgnore(void);
#define power_domain_get_state_ExpectAnyArgsAndReturn(cmock_retval) power_domain_get_state_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_get_state_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_get_state_ExpectAndReturn(pd_id, state, cmock_retval) power_domain_get_state_CMockExpectAndReturn(__LINE__, pd_id, state, cmock_retval)
void power_domain_get_state_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, unsigned int* state, int cmock_to_return);
typedef int (* CMOCK_power_domain_get_state_CALLBACK)(fwk_id_t pd_id, unsigned int* state, int cmock_num_calls);
void power_domain_get_state_AddCallback(CMOCK_power_domain_get_state_CALLBACK Callback);
void power_domain_get_state_Stub(CMOCK_power_domain_get_state_CALLBACK Callback);
#define power_domain_get_state_StubWithCallback power_domain_get_state_Stub
#define power_domain_get_state_ExpectWithArrayAndReturn(pd_id, state, state_Depth, cmock_retval) power_domain_get_state_CMockExpectWithArrayAndReturn(__LINE__, pd_id, state, state_Depth, cmock_retval)
void power_domain_get_state_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, unsigned int* state, int state_Depth, int cmock_to_return);
#define power_domain_get_state_ReturnThruPtr_state(state) power_domain_get_state_CMockReturnMemThruPtr_state(__LINE__, state, sizeof(unsigned int))
#define power_domain_get_state_ReturnArrayThruPtr_state(state, cmock_len) power_domain_get_state_CMockReturnMemThruPtr_state(__LINE__, state, cmock_len * sizeof(*state))
#define power_domain_get_state_ReturnMemThruPtr_state(state, cmock_size) power_domain_get_state_CMockReturnMemThruPtr_state(__LINE__, state, cmock_size)
void power_domain_get_state_CMockReturnMemThruPtr_state(UNITY_LINE_TYPE cmock_line, unsigned int* state, size_t cmock_size);
#define power_domain_get_state_IgnoreArg_pd_id() power_domain_get_state_CMockIgnoreArg_pd_id(__LINE__)
void power_domain_get_state_CMockIgnoreArg_pd_id(UNITY_LINE_TYPE cmock_line);
#define power_domain_get_state_IgnoreArg_state() power_domain_get_state_CMockIgnoreArg_state(__LINE__)
void power_domain_get_state_CMockIgnoreArg_state(UNITY_LINE_TYPE cmock_line);
#define power_domain_reset_IgnoreAndReturn(cmock_retval) power_domain_reset_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_reset_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_reset_StopIgnore() power_domain_reset_CMockStopIgnore()
void power_domain_reset_CMockStopIgnore(void);
#define power_domain_reset_ExpectAnyArgsAndReturn(cmock_retval) power_domain_reset_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_reset_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_reset_ExpectAndReturn(pd_id, resp_requested, cmock_retval) power_domain_reset_CMockExpectAndReturn(__LINE__, pd_id, resp_requested, cmock_retval)
void power_domain_reset_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t pd_id, bool resp_requested, int cmock_to_return);
typedef int (* CMOCK_power_domain_reset_CALLBACK)(fwk_id_t pd_id, bool resp_requested, int cmock_num_calls);
void power_domain_reset_AddCallback(CMOCK_power_domain_reset_CALLBACK Callback);
void power_domain_reset_Stub(CMOCK_power_domain_reset_CALLBACK Callback);
#define power_domain_reset_StubWithCallback power_domain_reset_Stub
#define power_domain_reset_IgnoreArg_pd_id() power_domain_reset_CMockIgnoreArg_pd_id(__LINE__)
void power_domain_reset_CMockIgnoreArg_pd_id(UNITY_LINE_TYPE cmock_line);
#define power_domain_reset_IgnoreArg_resp_requested() power_domain_reset_CMockIgnoreArg_resp_requested(__LINE__)
void power_domain_reset_CMockIgnoreArg_resp_requested(UNITY_LINE_TYPE cmock_line);
#define power_domain_system_suspend_IgnoreAndReturn(cmock_retval) power_domain_system_suspend_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_system_suspend_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_system_suspend_StopIgnore() power_domain_system_suspend_CMockStopIgnore()
void power_domain_system_suspend_CMockStopIgnore(void);
#define power_domain_system_suspend_ExpectAnyArgsAndReturn(cmock_retval) power_domain_system_suspend_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_system_suspend_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_system_suspend_ExpectAndReturn(state, cmock_retval) power_domain_system_suspend_CMockExpectAndReturn(__LINE__, state, cmock_retval)
void power_domain_system_suspend_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int state, int cmock_to_return);
typedef int (* CMOCK_power_domain_system_suspend_CALLBACK)(unsigned int state, int cmock_num_calls);
void power_domain_system_suspend_AddCallback(CMOCK_power_domain_system_suspend_CALLBACK Callback);
void power_domain_system_suspend_Stub(CMOCK_power_domain_system_suspend_CALLBACK Callback);
#define power_domain_system_suspend_StubWithCallback power_domain_system_suspend_Stub
#define power_domain_system_suspend_IgnoreArg_state() power_domain_system_suspend_CMockIgnoreArg_state(__LINE__)
void power_domain_system_suspend_CMockIgnoreArg_state(UNITY_LINE_TYPE cmock_line);
#define power_domain_system_shutdown_IgnoreAndReturn(cmock_retval) power_domain_system_shutdown_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void power_domain_system_shutdown_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_system_shutdown_StopIgnore() power_domain_system_shutdown_CMockStopIgnore()
void power_domain_system_shutdown_CMockStopIgnore(void);
#define power_domain_system_shutdown_ExpectAnyArgsAndReturn(cmock_retval) power_domain_system_shutdown_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void power_domain_system_shutdown_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define power_domain_system_shutdown_ExpectAndReturn(system_shutdown, cmock_retval) power_domain_system_shutdown_CMockExpectAndReturn(__LINE__, system_shutdown, cmock_retval)
void power_domain_system_shutdown_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, enum mod_pd_system_shutdown system_shutdown, int cmock_to_return);
typedef int (* CMOCK_power_domain_system_shutdown_CALLBACK)(enum mod_pd_system_shutdown system_shutdown, int cmock_num_calls);
void power_domain_system_shutdown_AddCallback(CMOCK_power_domain_system_shutdown_CALLBACK Callback);
void power_domain_system_shutdown_Stub(CMOCK_power_domain_system_shutdown_CALLBACK Callback);
#define power_domain_system_shutdown_StubWithCallback power_domain_system_shutdown_Stub
#define power_domain_system_shutdown_IgnoreArg_system_shutdown() power_domain_system_shutdown_CMockIgnoreArg_system_shutdown(__LINE__)
void power_domain_system_shutdown_CMockIgnoreArg_system_shutdown(UNITY_LINE_TYPE cmock_line);
#define scmi_get_agent_count_IgnoreAndReturn(cmock_retval) scmi_get_agent_count_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void scmi_get_agent_count_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_agent_count_StopIgnore() scmi_get_agent_count_CMockStopIgnore()
void scmi_get_agent_count_CMockStopIgnore(void);
#define scmi_get_agent_count_ExpectAnyArgsAndReturn(cmock_retval) scmi_get_agent_count_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void scmi_get_agent_count_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_agent_count_ExpectAndReturn(agent_count, cmock_retval) scmi_get_agent_count_CMockExpectAndReturn(__LINE__, agent_count, cmock_retval)
void scmi_get_agent_count_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, int cmock_to_return);
typedef int (* CMOCK_scmi_get_agent_count_CALLBACK)(unsigned int* agent_count, int cmock_num_calls);
void scmi_get_agent_count_AddCallback(CMOCK_scmi_get_agent_count_CALLBACK Callback);
void scmi_get_agent_count_Stub(CMOCK_scmi_get_agent_count_CALLBACK Callback);
#define scmi_get_agent_count_StubWithCallback scmi_get_agent_count_Stub
#define scmi_get_agent_count_ExpectWithArrayAndReturn(agent_count, agent_count_Depth, cmock_retval) scmi_get_agent_count_CMockExpectWithArrayAndReturn(__LINE__, agent_count, agent_count_Depth, cmock_retval)
void scmi_get_agent_count_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, int agent_count_Depth, int cmock_to_return);
#define scmi_get_agent_count_ReturnThruPtr_agent_count(agent_count) scmi_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, sizeof(unsigned int))
#define scmi_get_agent_count_ReturnArrayThruPtr_agent_count(agent_count, cmock_len) scmi_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, cmock_len * sizeof(*agent_count))
#define scmi_get_agent_count_ReturnMemThruPtr_agent_count(agent_count, cmock_size) scmi_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, cmock_size)
void scmi_get_agent_count_CMockReturnMemThruPtr_agent_count(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, size_t cmock_size);
#define scmi_get_agent_count_IgnoreArg_agent_count() scmi_get_agent_count_CMockIgnoreArg_agent_count(__LINE__)
void scmi_get_agent_count_CMockIgnoreArg_agent_count(UNITY_LINE_TYPE cmock_line);
#define scmi_get_agent_id_IgnoreAndReturn(cmock_retval) scmi_get_agent_id_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void scmi_get_agent_id_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_agent_id_StopIgnore() scmi_get_agent_id_CMockStopIgnore()
void scmi_get_agent_id_CMockStopIgnore(void);
#define scmi_get_agent_id_ExpectAnyArgsAndReturn(cmock_retval) scmi_get_agent_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void scmi_get_agent_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_agent_id_ExpectAndReturn(service_id, agent_id, cmock_retval) scmi_get_agent_id_CMockExpectAndReturn(__LINE__, service_id, agent_id, cmock_retval)
void scmi_get_agent_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, unsigned int* agent_id, int cmock_to_return);
typedef int (* CMOCK_scmi_get_agent_id_CALLBACK)(fwk_id_t service_id, unsigned int* agent_id, int cmock_num_calls);
void scmi_get_agent_id_AddCallback(CMOCK_scmi_get_agent_id_CALLBACK Callback);
void scmi_get_agent_id_Stub(CMOCK_scmi_get_agent_id_CALLBACK Callback);
#define scmi_get_agent_id_StubWithCallback scmi_get_agent_id_Stub
#define scmi_get_agent_id_ExpectWithArrayAndReturn(service_id, agent_id, agent_id_Depth, cmock_retval) scmi_get_agent_id_CMockExpectWithArrayAndReturn(__LINE__, service_id, agent_id, agent_id_Depth, cmock_retval)
void scmi_get_agent_id_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, unsigned int* agent_id, int agent_id_Depth, int cmock_to_return);
#define scmi_get_agent_id_ReturnThruPtr_agent_id(agent_id) scmi_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, sizeof(unsigned int))
#define scmi_get_agent_id_ReturnArrayThruPtr_agent_id(agent_id, cmock_len) scmi_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, cmock_len * sizeof(*agent_id))
#define scmi_get_agent_id_ReturnMemThruPtr_agent_id(agent_id, cmock_size) scmi_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, cmock_size)
void scmi_get_agent_id_CMockReturnMemThruPtr_agent_id(UNITY_LINE_TYPE cmock_line, unsigned int* agent_id, size_t cmock_size);
#define scmi_get_agent_id_IgnoreArg_service_id() scmi_get_agent_id_CMockIgnoreArg_service_id(__LINE__)
void scmi_get_agent_id_CMockIgnoreArg_service_id(UNITY_LINE_TYPE cmock_line);
#define scmi_get_agent_id_IgnoreArg_agent_id() scmi_get_agent_id_CMockIgnoreArg_agent_id(__LINE__)
void scmi_get_agent_id_CMockIgnoreArg_agent_id(UNITY_LINE_TYPE cmock_line);
#define scmi_get_agent_type_IgnoreAndReturn(cmock_retval) scmi_get_agent_type_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void scmi_get_agent_type_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_agent_type_StopIgnore() scmi_get_agent_type_CMockStopIgnore()
void scmi_get_agent_type_CMockStopIgnore(void);
#define scmi_get_agent_type_ExpectAnyArgsAndReturn(cmock_retval) scmi_get_agent_type_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void scmi_get_agent_type_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_agent_type_ExpectAndReturn(agent_id, agent_type, cmock_retval) scmi_get_agent_type_CMockExpectAndReturn(__LINE__, agent_id, agent_type, cmock_retval)
void scmi_get_agent_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t agent_id, enum scmi_agent_type* agent_type, int cmock_to_return);
typedef int (* CMOCK_scmi_get_agent_type_CALLBACK)(uint32_t agent_id, enum scmi_agent_type* agent_type, int cmock_num_calls);
void scmi_get_agent_type_AddCallback(CMOCK_scmi_get_agent_type_CALLBACK Callback);
void scmi_get_agent_type_Stub(CMOCK_scmi_get_agent_type_CALLBACK Callback);
#define scmi_get_agent_type_StubWithCallback scmi_get_agent_type_Stub
#define scmi_get_agent_type_ExpectWithArrayAndReturn(agent_id, agent_type, agent_type_Depth, cmock_retval) scmi_get_agent_type_CMockExpectWithArrayAndReturn(__LINE__, agent_id, agent_type, agent_type_Depth, cmock_retval)
void scmi_get_agent_type_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t agent_id, enum scmi_agent_type* agent_type, int agent_type_Depth, int cmock_to_return);
#define scmi_get_agent_type_ReturnThruPtr_agent_type(agent_type) scmi_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, sizeof(enum scmi_agent_type))
#define scmi_get_agent_type_ReturnArrayThruPtr_agent_type(agent_type, cmock_len) scmi_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, cmock_len * sizeof(*agent_type))
#define scmi_get_agent_type_ReturnMemThruPtr_agent_type(agent_type, cmock_size) scmi_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, cmock_size)
void scmi_get_agent_type_CMockReturnMemThruPtr_agent_type(UNITY_LINE_TYPE cmock_line, enum scmi_agent_type* agent_type, size_t cmock_size);
#define scmi_get_agent_type_IgnoreArg_agent_id() scmi_get_agent_type_CMockIgnoreArg_agent_id(__LINE__)
void scmi_get_agent_type_CMockIgnoreArg_agent_id(UNITY_LINE_TYPE cmock_line);
#define scmi_get_agent_type_IgnoreArg_agent_type() scmi_get_agent_type_CMockIgnoreArg_agent_type(__LINE__)
void scmi_get_agent_type_CMockIgnoreArg_agent_type(UNITY_LINE_TYPE cmock_line);
#define scmi_get_max_payload_size_IgnoreAndReturn(cmock_retval) scmi_get_max_payload_size_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void scmi_get_max_payload_size_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_max_payload_size_StopIgnore() scmi_get_max_payload_size_CMockStopIgnore()
void scmi_get_max_payload_size_CMockStopIgnore(void);
#define scmi_get_max_payload_size_ExpectAnyArgsAndReturn(cmock_retval) scmi_get_max_payload_size_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void scmi_get_max_payload_size_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_get_max_payload_size_ExpectAndReturn(service_id, size, cmock_retval) scmi_get_max_payload_size_CMockExpectAndReturn(__LINE__, service_id, size, cmock_retval)
void scmi_get_max_payload_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t* size, int cmock_to_return);
typedef int (* CMOCK_scmi_get_max_payload_size_CALLBACK)(fwk_id_t service_id, size_t* size, int cmock_num_calls);
void scmi_get_max_payload_size_AddCallback(CMOCK_scmi_get_max_payload_size_CALLBACK Callback);
void scmi_get_max_payload_size_Stub(CMOCK_scmi_get_max_payload_size_CALLBACK Callback);
#define scmi_get_max_payload_size_StubWithCallback scmi_get_max_payload_size_Stub
#define scmi_get_max_payload_size_ExpectWithArrayAndReturn(service_id, size, size_Depth, cmock_retval) scmi_get_max_payload_size_CMockExpectWithArrayAndReturn(__LINE__, service_id, size, size_Depth, cmock_retval)
void scmi_get_max_payload_size_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t* size, int size_Depth, int cmock_to_return);
#define scmi_get_max_payload_size_ReturnThruPtr_size(size) scmi_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, sizeof(size_t))
#define scmi_get_max_payload_size_ReturnArrayThruPtr_size(size, cmock_len) scmi_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_len * sizeof(*size))
#define scmi_get_max_payload_size_ReturnMemThruPtr_size(size, cmock_size) scmi_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_size)
void scmi_get_max_payload_size_CMockReturnMemThruPtr_size(UNITY_LINE_TYPE cmock_line, size_t* size, size_t cmock_size);
#define scmi_get_max_payload_size_IgnoreArg_service_id() scmi_get_max_payload_size_CMockIgnoreArg_service_id(__LINE__)
void scmi_get_max_payload_size_CMockIgnoreArg_service_id(UNITY_LINE_TYPE cmock_line);
#define scmi_get_max_payload_size_IgnoreArg_size() scmi_get_max_payload_size_CMockIgnoreArg_size(__LINE__)
void scmi_get_max_payload_size_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define scmi_write_payload_IgnoreAndReturn(cmock_retval) scmi_write_payload_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void scmi_write_payload_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_write_payload_StopIgnore() scmi_write_payload_CMockStopIgnore()
void scmi_write_payload_CMockStopIgnore(void);
#define scmi_write_payload_ExpectAnyArgsAndReturn(cmock_retval) scmi_write_payload_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void scmi_write_payload_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_write_payload_ExpectAndReturn(service_id, offset, payload, size, cmock_retval) scmi_write_payload_CMockExpectAndReturn(__LINE__, service_id, offset, payload, size, cmock_retval)
void scmi_write_payload_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t offset, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_scmi_write_payload_CALLBACK)(fwk_id_t service_id, size_t offset, const void* payload, size_t size, int cmock_num_calls);
void scmi_write_payload_AddCallback(CMOCK_scmi_write_payload_CALLBACK Callback);
void scmi_write_payload_Stub(CMOCK_scmi_write_payload_CALLBACK Callback);
#define scmi_write_payload_StubWithCallback scmi_write_payload_Stub
#define scmi_write_payload_ExpectWithArrayAndReturn(service_id, offset, payload, payload_Depth, size, cmock_retval) scmi_write_payload_CMockExpectWithArrayAndReturn(__LINE__, service_id, offset, payload, payload_Depth, size, cmock_retval)
void scmi_write_payload_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t offset, const void* payload, int payload_Depth, size_t size, int cmock_to_return);
#define scmi_write_payload_IgnoreArg_service_id() scmi_write_payload_CMockIgnoreArg_service_id(__LINE__)
void scmi_write_payload_CMockIgnoreArg_service_id(UNITY_LINE_TYPE cmock_line);
#define scmi_write_payload_IgnoreArg_offset() scmi_write_payload_CMockIgnoreArg_offset(__LINE__)
void scmi_write_payload_CMockIgnoreArg_offset(UNITY_LINE_TYPE cmock_line);
#define scmi_write_payload_IgnoreArg_payload() scmi_write_payload_CMockIgnoreArg_payload(__LINE__)
void scmi_write_payload_CMockIgnoreArg_payload(UNITY_LINE_TYPE cmock_line);
#define scmi_write_payload_IgnoreArg_size() scmi_write_payload_CMockIgnoreArg_size(__LINE__)
void scmi_write_payload_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define scmi_respond_IgnoreAndReturn(cmock_retval) scmi_respond_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void scmi_respond_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_respond_StopIgnore() scmi_respond_CMockStopIgnore()
void scmi_respond_CMockStopIgnore(void);
#define scmi_respond_ExpectAnyArgsAndReturn(cmock_retval) scmi_respond_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void scmi_respond_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define scmi_respond_ExpectAndReturn(service_id, payload, size, cmock_retval) scmi_respond_CMockExpectAndReturn(__LINE__, service_id, payload, size, cmock_retval)
void scmi_respond_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_scmi_respond_CALLBACK)(fwk_id_t service_id, const void* payload, size_t size, int cmock_num_calls);
void scmi_respond_AddCallback(CMOCK_scmi_respond_CALLBACK Callback);
void scmi_respond_Stub(CMOCK_scmi_respond_CALLBACK Callback);
#define scmi_respond_StubWithCallback scmi_respond_Stub
#define scmi_respond_ExpectWithArrayAndReturn(service_id, payload, payload_Depth, size, cmock_retval) scmi_respond_CMockExpectWithArrayAndReturn(__LINE__, service_id, payload, payload_Depth, size, cmock_retval)
void scmi_respond_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, const void* payload, int payload_Depth, size_t size, int cmock_to_return);
#define scmi_respond_IgnoreArg_service_id() scmi_respond_CMockIgnoreArg_service_id(__LINE__)
void scmi_respond_CMockIgnoreArg_service_id(UNITY_LINE_TYPE cmock_line);
#define scmi_respond_IgnoreArg_payload() scmi_respond_CMockIgnoreArg_payload(__LINE__)
void scmi_respond_CMockIgnoreArg_payload(UNITY_LINE_TYPE cmock_line);
#define scmi_respond_IgnoreArg_size() scmi_respond_CMockIgnoreArg_size(__LINE__)
void scmi_respond_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define scmi_notify_Ignore() scmi_notify_CMockIgnore()
void scmi_notify_CMockIgnore(void);
#define scmi_notify_StopIgnore() scmi_notify_CMockStopIgnore()
void scmi_notify_CMockStopIgnore(void);
#define scmi_notify_ExpectAnyArgs() scmi_notify_CMockExpectAnyArgs(__LINE__)
void scmi_notify_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define scmi_notify_Expect(service_id, protocol_id, message_id, payload, size) scmi_notify_CMockExpect(__LINE__, service_id, protocol_id, message_id, payload, size)
void scmi_notify_CMockExpect(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, int protocol_id, int message_id, const void* payload, size_t size);
typedef void (* CMOCK_scmi_notify_CALLBACK)(fwk_id_t service_id, int protocol_id, int message_id, const void* payload, size_t size, int cmock_num_calls);
void scmi_notify_AddCallback(CMOCK_scmi_notify_CALLBACK Callback);
void scmi_notify_Stub(CMOCK_scmi_notify_CALLBACK Callback);
#define scmi_notify_StubWithCallback scmi_notify_Stub
#define scmi_notify_ExpectWithArray(service_id, protocol_id, message_id, payload, payload_Depth, size) scmi_notify_CMockExpectWithArray(__LINE__, service_id, protocol_id, message_id, payload, payload_Depth, size)
void scmi_notify_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, int protocol_id, int message_id, const void* payload, int payload_Depth, size_t size);
#define scmi_notify_IgnoreArg_service_id() scmi_notify_CMockIgnoreArg_service_id(__LINE__)
void scmi_notify_CMockIgnoreArg_service_id(UNITY_LINE_TYPE cmock_line);
#define scmi_notify_IgnoreArg_protocol_id() scmi_notify_CMockIgnoreArg_protocol_id(__LINE__)
void scmi_notify_CMockIgnoreArg_protocol_id(UNITY_LINE_TYPE cmock_line);
#define scmi_notify_IgnoreArg_message_id() scmi_notify_CMockIgnoreArg_message_id(__LINE__)
void scmi_notify_CMockIgnoreArg_message_id(UNITY_LINE_TYPE cmock_line);
#define scmi_notify_IgnoreArg_payload() scmi_notify_CMockIgnoreArg_payload(__LINE__)
void scmi_notify_CMockIgnoreArg_payload(UNITY_LINE_TYPE cmock_line);
#define scmi_notify_IgnoreArg_size() scmi_notify_CMockIgnoreArg_size(__LINE__)
void scmi_notify_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
