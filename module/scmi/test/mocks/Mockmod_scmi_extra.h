/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_SCMI_EXTRA_H
#define _MOCKMOD_SCMI_EXTRA_H

#include "unity.h"
#include "mod_scmi_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_scmi_extra_Init(void);
void Mockmod_scmi_extra_Destroy(void);
void Mockmod_scmi_extra_Verify(void);




#define mod_scmi_to_transport_api_get_secure_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_get_secure_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_get_secure_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_get_secure_ExpectAndReturn(channel_id, secure, cmock_retval) mod_scmi_to_transport_api_get_secure_CMockExpectAndReturn(__LINE__, channel_id, secure, cmock_retval)
void mod_scmi_to_transport_api_get_secure_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, bool* secure, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_get_secure_CALLBACK)(fwk_id_t channel_id, bool* secure, int cmock_num_calls);
void mod_scmi_to_transport_api_get_secure_AddCallback(CMOCK_mod_scmi_to_transport_api_get_secure_CALLBACK Callback);
void mod_scmi_to_transport_api_get_secure_Stub(CMOCK_mod_scmi_to_transport_api_get_secure_CALLBACK Callback);
#define mod_scmi_to_transport_api_get_secure_StubWithCallback mod_scmi_to_transport_api_get_secure_Stub
#define mod_scmi_to_transport_api_get_secure_ReturnThruPtr_secure(secure) mod_scmi_to_transport_api_get_secure_CMockReturnMemThruPtr_secure(__LINE__, secure, sizeof(bool))
#define mod_scmi_to_transport_api_get_secure_ReturnArrayThruPtr_secure(secure, cmock_len) mod_scmi_to_transport_api_get_secure_CMockReturnMemThruPtr_secure(__LINE__, secure, cmock_len * sizeof(*secure))
#define mod_scmi_to_transport_api_get_secure_ReturnMemThruPtr_secure(secure, cmock_size) mod_scmi_to_transport_api_get_secure_CMockReturnMemThruPtr_secure(__LINE__, secure, cmock_size)
void mod_scmi_to_transport_api_get_secure_CMockReturnMemThruPtr_secure(UNITY_LINE_TYPE cmock_line, bool* secure, size_t cmock_size);
#define mod_scmi_to_transport_api_get_max_payload_size_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_get_max_payload_size_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_get_max_payload_size_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_get_max_payload_size_ExpectAndReturn(channel_id, size, cmock_retval) mod_scmi_to_transport_api_get_max_payload_size_CMockExpectAndReturn(__LINE__, channel_id, size, cmock_retval)
void mod_scmi_to_transport_api_get_max_payload_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, size_t* size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_get_max_payload_size_CALLBACK)(fwk_id_t channel_id, size_t* size, int cmock_num_calls);
void mod_scmi_to_transport_api_get_max_payload_size_AddCallback(CMOCK_mod_scmi_to_transport_api_get_max_payload_size_CALLBACK Callback);
void mod_scmi_to_transport_api_get_max_payload_size_Stub(CMOCK_mod_scmi_to_transport_api_get_max_payload_size_CALLBACK Callback);
#define mod_scmi_to_transport_api_get_max_payload_size_StubWithCallback mod_scmi_to_transport_api_get_max_payload_size_Stub
#define mod_scmi_to_transport_api_get_max_payload_size_ReturnThruPtr_size(size) mod_scmi_to_transport_api_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, sizeof(size_t))
#define mod_scmi_to_transport_api_get_max_payload_size_ReturnArrayThruPtr_size(size, cmock_len) mod_scmi_to_transport_api_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_len * sizeof(*size))
#define mod_scmi_to_transport_api_get_max_payload_size_ReturnMemThruPtr_size(size, cmock_size) mod_scmi_to_transport_api_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_size)
void mod_scmi_to_transport_api_get_max_payload_size_CMockReturnMemThruPtr_size(UNITY_LINE_TYPE cmock_line, size_t* size, size_t cmock_size);
#define mod_scmi_to_transport_api_get_message_header_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_get_message_header_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_get_message_header_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_get_message_header_ExpectAndReturn(channel_id, message_header, cmock_retval) mod_scmi_to_transport_api_get_message_header_CMockExpectAndReturn(__LINE__, channel_id, message_header, cmock_retval)
void mod_scmi_to_transport_api_get_message_header_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, uint32_t* message_header, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_get_message_header_CALLBACK)(fwk_id_t channel_id, uint32_t* message_header, int cmock_num_calls);
void mod_scmi_to_transport_api_get_message_header_AddCallback(CMOCK_mod_scmi_to_transport_api_get_message_header_CALLBACK Callback);
void mod_scmi_to_transport_api_get_message_header_Stub(CMOCK_mod_scmi_to_transport_api_get_message_header_CALLBACK Callback);
#define mod_scmi_to_transport_api_get_message_header_StubWithCallback mod_scmi_to_transport_api_get_message_header_Stub
#define mod_scmi_to_transport_api_get_message_header_ReturnThruPtr_message_header(message_header) mod_scmi_to_transport_api_get_message_header_CMockReturnMemThruPtr_message_header(__LINE__, message_header, sizeof(uint32_t))
#define mod_scmi_to_transport_api_get_message_header_ReturnArrayThruPtr_message_header(message_header, cmock_len) mod_scmi_to_transport_api_get_message_header_CMockReturnMemThruPtr_message_header(__LINE__, message_header, cmock_len * sizeof(*message_header))
#define mod_scmi_to_transport_api_get_message_header_ReturnMemThruPtr_message_header(message_header, cmock_size) mod_scmi_to_transport_api_get_message_header_CMockReturnMemThruPtr_message_header(__LINE__, message_header, cmock_size)
void mod_scmi_to_transport_api_get_message_header_CMockReturnMemThruPtr_message_header(UNITY_LINE_TYPE cmock_line, uint32_t* message_header, size_t cmock_size);
#define mod_scmi_to_transport_api_get_payload_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_get_payload_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_get_payload_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_get_payload_ExpectAndReturn(channel_id, payload, size, cmock_retval) mod_scmi_to_transport_api_get_payload_CMockExpectAndReturn(__LINE__, channel_id, payload, size, cmock_retval)
void mod_scmi_to_transport_api_get_payload_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, const void** payload, size_t* size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_get_payload_CALLBACK)(fwk_id_t channel_id, const void** payload, size_t* size, int cmock_num_calls);
void mod_scmi_to_transport_api_get_payload_AddCallback(CMOCK_mod_scmi_to_transport_api_get_payload_CALLBACK Callback);
void mod_scmi_to_transport_api_get_payload_Stub(CMOCK_mod_scmi_to_transport_api_get_payload_CALLBACK Callback);
#define mod_scmi_to_transport_api_get_payload_StubWithCallback mod_scmi_to_transport_api_get_payload_Stub
#define mod_scmi_to_transport_api_get_payload_ReturnThruPtr_payload(payload) mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_payload(__LINE__, payload, sizeof(const void*))
#define mod_scmi_to_transport_api_get_payload_ReturnArrayThruPtr_payload(payload, cmock_len) mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_payload(__LINE__, payload, cmock_len * sizeof(*payload))
#define mod_scmi_to_transport_api_get_payload_ReturnMemThruPtr_payload(payload, cmock_size) mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_payload(__LINE__, payload, cmock_size)
void mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_payload(UNITY_LINE_TYPE cmock_line, const void** payload, size_t cmock_size);
#define mod_scmi_to_transport_api_get_payload_ReturnThruPtr_size(size) mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_size(__LINE__, size, sizeof(size_t))
#define mod_scmi_to_transport_api_get_payload_ReturnArrayThruPtr_size(size, cmock_len) mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_size(__LINE__, size, cmock_len * sizeof(*size))
#define mod_scmi_to_transport_api_get_payload_ReturnMemThruPtr_size(size, cmock_size) mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_size(__LINE__, size, cmock_size)
void mod_scmi_to_transport_api_get_payload_CMockReturnMemThruPtr_size(UNITY_LINE_TYPE cmock_line, size_t* size, size_t cmock_size);
#define mod_scmi_to_transport_api_write_payload_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_write_payload_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_write_payload_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_write_payload_ExpectAndReturn(channel_id, offset, payload, size, cmock_retval) mod_scmi_to_transport_api_write_payload_CMockExpectAndReturn(__LINE__, channel_id, offset, payload, size, cmock_retval)
void mod_scmi_to_transport_api_write_payload_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, size_t offset, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_write_payload_CALLBACK)(fwk_id_t channel_id, size_t offset, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_to_transport_api_write_payload_AddCallback(CMOCK_mod_scmi_to_transport_api_write_payload_CALLBACK Callback);
void mod_scmi_to_transport_api_write_payload_Stub(CMOCK_mod_scmi_to_transport_api_write_payload_CALLBACK Callback);
#define mod_scmi_to_transport_api_write_payload_StubWithCallback mod_scmi_to_transport_api_write_payload_Stub
#define mod_scmi_to_transport_api_respond_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_respond_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_respond_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_respond_ExpectAndReturn(channel_id, payload, size, cmock_retval) mod_scmi_to_transport_api_respond_CMockExpectAndReturn(__LINE__, channel_id, payload, size, cmock_retval)
void mod_scmi_to_transport_api_respond_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_respond_CALLBACK)(fwk_id_t channel_id, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_to_transport_api_respond_AddCallback(CMOCK_mod_scmi_to_transport_api_respond_CALLBACK Callback);
void mod_scmi_to_transport_api_respond_Stub(CMOCK_mod_scmi_to_transport_api_respond_CALLBACK Callback);
#define mod_scmi_to_transport_api_respond_StubWithCallback mod_scmi_to_transport_api_respond_Stub
#define mod_scmi_to_transport_api_transmit_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_transmit_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_transmit_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_transmit_ExpectAndReturn(channel_id, message_header, payload, size, request_ack_by_interrupt, cmock_retval) mod_scmi_to_transport_api_transmit_CMockExpectAndReturn(__LINE__, channel_id, message_header, payload, size, request_ack_by_interrupt, cmock_retval)
void mod_scmi_to_transport_api_transmit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, uint32_t message_header, const void* payload, size_t size, bool request_ack_by_interrupt, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_transmit_CALLBACK)(fwk_id_t channel_id, uint32_t message_header, const void* payload, size_t size, bool request_ack_by_interrupt, int cmock_num_calls);
void mod_scmi_to_transport_api_transmit_AddCallback(CMOCK_mod_scmi_to_transport_api_transmit_CALLBACK Callback);
void mod_scmi_to_transport_api_transmit_Stub(CMOCK_mod_scmi_to_transport_api_transmit_CALLBACK Callback);
#define mod_scmi_to_transport_api_transmit_StubWithCallback mod_scmi_to_transport_api_transmit_Stub
#define mod_scmi_to_transport_api_release_transport_channel_lock_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_to_transport_api_release_transport_channel_lock_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_to_transport_api_release_transport_channel_lock_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_to_transport_api_release_transport_channel_lock_ExpectAndReturn(channel_id, cmock_retval) mod_scmi_to_transport_api_release_transport_channel_lock_CMockExpectAndReturn(__LINE__, channel_id, cmock_retval)
void mod_scmi_to_transport_api_release_transport_channel_lock_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t channel_id, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_to_transport_api_release_transport_channel_lock_CALLBACK)(fwk_id_t channel_id, int cmock_num_calls);
void mod_scmi_to_transport_api_release_transport_channel_lock_AddCallback(CMOCK_mod_scmi_to_transport_api_release_transport_channel_lock_CALLBACK Callback);
void mod_scmi_to_transport_api_release_transport_channel_lock_Stub(CMOCK_mod_scmi_to_transport_api_release_transport_channel_lock_CALLBACK Callback);
#define mod_scmi_to_transport_api_release_transport_channel_lock_StubWithCallback mod_scmi_to_transport_api_release_transport_channel_lock_Stub
#define mod_scmi_from_protocol_get_agent_count_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_get_agent_count_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_get_agent_count_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_get_agent_count_ExpectAndReturn(agent_count, cmock_retval) mod_scmi_from_protocol_get_agent_count_CMockExpectAndReturn(__LINE__, agent_count, cmock_retval)
void mod_scmi_from_protocol_get_agent_count_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_get_agent_count_CALLBACK)(unsigned int* agent_count, int cmock_num_calls);
void mod_scmi_from_protocol_get_agent_count_AddCallback(CMOCK_mod_scmi_from_protocol_get_agent_count_CALLBACK Callback);
void mod_scmi_from_protocol_get_agent_count_Stub(CMOCK_mod_scmi_from_protocol_get_agent_count_CALLBACK Callback);
#define mod_scmi_from_protocol_get_agent_count_StubWithCallback mod_scmi_from_protocol_get_agent_count_Stub
#define mod_scmi_from_protocol_get_agent_count_ReturnThruPtr_agent_count(agent_count) mod_scmi_from_protocol_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, sizeof(unsigned int))
#define mod_scmi_from_protocol_get_agent_count_ReturnArrayThruPtr_agent_count(agent_count, cmock_len) mod_scmi_from_protocol_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, cmock_len * sizeof(*agent_count))
#define mod_scmi_from_protocol_get_agent_count_ReturnMemThruPtr_agent_count(agent_count, cmock_size) mod_scmi_from_protocol_get_agent_count_CMockReturnMemThruPtr_agent_count(__LINE__, agent_count, cmock_size)
void mod_scmi_from_protocol_get_agent_count_CMockReturnMemThruPtr_agent_count(UNITY_LINE_TYPE cmock_line, unsigned int* agent_count, size_t cmock_size);
#define mod_scmi_from_protocol_get_agent_id_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_get_agent_id_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_get_agent_id_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_get_agent_id_ExpectAndReturn(service_id, agent_id, cmock_retval) mod_scmi_from_protocol_get_agent_id_CMockExpectAndReturn(__LINE__, service_id, agent_id, cmock_retval)
void mod_scmi_from_protocol_get_agent_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, unsigned int* agent_id, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_get_agent_id_CALLBACK)(fwk_id_t service_id, unsigned int* agent_id, int cmock_num_calls);
void mod_scmi_from_protocol_get_agent_id_AddCallback(CMOCK_mod_scmi_from_protocol_get_agent_id_CALLBACK Callback);
void mod_scmi_from_protocol_get_agent_id_Stub(CMOCK_mod_scmi_from_protocol_get_agent_id_CALLBACK Callback);
#define mod_scmi_from_protocol_get_agent_id_StubWithCallback mod_scmi_from_protocol_get_agent_id_Stub
#define mod_scmi_from_protocol_get_agent_id_ReturnThruPtr_agent_id(agent_id) mod_scmi_from_protocol_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, sizeof(unsigned int))
#define mod_scmi_from_protocol_get_agent_id_ReturnArrayThruPtr_agent_id(agent_id, cmock_len) mod_scmi_from_protocol_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, cmock_len * sizeof(*agent_id))
#define mod_scmi_from_protocol_get_agent_id_ReturnMemThruPtr_agent_id(agent_id, cmock_size) mod_scmi_from_protocol_get_agent_id_CMockReturnMemThruPtr_agent_id(__LINE__, agent_id, cmock_size)
void mod_scmi_from_protocol_get_agent_id_CMockReturnMemThruPtr_agent_id(UNITY_LINE_TYPE cmock_line, unsigned int* agent_id, size_t cmock_size);
#define mod_scmi_from_protocol_get_agent_type_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_get_agent_type_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_get_agent_type_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_get_agent_type_ExpectAndReturn(agent_id, agent_type, cmock_retval) mod_scmi_from_protocol_get_agent_type_CMockExpectAndReturn(__LINE__, agent_id, agent_type, cmock_retval)
void mod_scmi_from_protocol_get_agent_type_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t agent_id, enum scmi_agent_type* agent_type, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_get_agent_type_CALLBACK)(uint32_t agent_id, enum scmi_agent_type* agent_type, int cmock_num_calls);
void mod_scmi_from_protocol_get_agent_type_AddCallback(CMOCK_mod_scmi_from_protocol_get_agent_type_CALLBACK Callback);
void mod_scmi_from_protocol_get_agent_type_Stub(CMOCK_mod_scmi_from_protocol_get_agent_type_CALLBACK Callback);
#define mod_scmi_from_protocol_get_agent_type_StubWithCallback mod_scmi_from_protocol_get_agent_type_Stub
#define mod_scmi_from_protocol_get_agent_type_ReturnThruPtr_agent_type(agent_type) mod_scmi_from_protocol_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, sizeof(enum scmi_agent_type))
#define mod_scmi_from_protocol_get_agent_type_ReturnArrayThruPtr_agent_type(agent_type, cmock_len) mod_scmi_from_protocol_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, cmock_len * sizeof(*agent_type))
#define mod_scmi_from_protocol_get_agent_type_ReturnMemThruPtr_agent_type(agent_type, cmock_size) mod_scmi_from_protocol_get_agent_type_CMockReturnMemThruPtr_agent_type(__LINE__, agent_type, cmock_size)
void mod_scmi_from_protocol_get_agent_type_CMockReturnMemThruPtr_agent_type(UNITY_LINE_TYPE cmock_line, enum scmi_agent_type* agent_type, size_t cmock_size);
#define mod_scmi_from_protocol_get_max_payload_size_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_get_max_payload_size_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_get_max_payload_size_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_get_max_payload_size_ExpectAndReturn(service_id, size, cmock_retval) mod_scmi_from_protocol_get_max_payload_size_CMockExpectAndReturn(__LINE__, service_id, size, cmock_retval)
void mod_scmi_from_protocol_get_max_payload_size_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t* size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_get_max_payload_size_CALLBACK)(fwk_id_t service_id, size_t* size, int cmock_num_calls);
void mod_scmi_from_protocol_get_max_payload_size_AddCallback(CMOCK_mod_scmi_from_protocol_get_max_payload_size_CALLBACK Callback);
void mod_scmi_from_protocol_get_max_payload_size_Stub(CMOCK_mod_scmi_from_protocol_get_max_payload_size_CALLBACK Callback);
#define mod_scmi_from_protocol_get_max_payload_size_StubWithCallback mod_scmi_from_protocol_get_max_payload_size_Stub
#define mod_scmi_from_protocol_get_max_payload_size_ReturnThruPtr_size(size) mod_scmi_from_protocol_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, sizeof(size_t))
#define mod_scmi_from_protocol_get_max_payload_size_ReturnArrayThruPtr_size(size, cmock_len) mod_scmi_from_protocol_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_len * sizeof(*size))
#define mod_scmi_from_protocol_get_max_payload_size_ReturnMemThruPtr_size(size, cmock_size) mod_scmi_from_protocol_get_max_payload_size_CMockReturnMemThruPtr_size(__LINE__, size, cmock_size)
void mod_scmi_from_protocol_get_max_payload_size_CMockReturnMemThruPtr_size(UNITY_LINE_TYPE cmock_line, size_t* size, size_t cmock_size);
#define mod_scmi_from_protocol_write_payload_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_write_payload_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_write_payload_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_write_payload_ExpectAndReturn(service_id, offset, payload, size, cmock_retval) mod_scmi_from_protocol_write_payload_CMockExpectAndReturn(__LINE__, service_id, offset, payload, size, cmock_retval)
void mod_scmi_from_protocol_write_payload_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, size_t offset, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_write_payload_CALLBACK)(fwk_id_t service_id, size_t offset, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_from_protocol_write_payload_AddCallback(CMOCK_mod_scmi_from_protocol_write_payload_CALLBACK Callback);
void mod_scmi_from_protocol_write_payload_Stub(CMOCK_mod_scmi_from_protocol_write_payload_CALLBACK Callback);
#define mod_scmi_from_protocol_write_payload_StubWithCallback mod_scmi_from_protocol_write_payload_Stub
#define mod_scmi_from_protocol_respond_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_respond_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_respond_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_respond_ExpectAndReturn(service_id, payload, size, cmock_retval) mod_scmi_from_protocol_respond_CMockExpectAndReturn(__LINE__, service_id, payload, size, cmock_retval)
void mod_scmi_from_protocol_respond_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, const void* payload, size_t size, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_respond_CALLBACK)(fwk_id_t service_id, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_from_protocol_respond_AddCallback(CMOCK_mod_scmi_from_protocol_respond_CALLBACK Callback);
void mod_scmi_from_protocol_respond_Stub(CMOCK_mod_scmi_from_protocol_respond_CALLBACK Callback);
#define mod_scmi_from_protocol_respond_StubWithCallback mod_scmi_from_protocol_respond_Stub
#define mod_scmi_from_protocol_notify_ExpectAnyArgs() mod_scmi_from_protocol_notify_CMockExpectAnyArgs(__LINE__)
void mod_scmi_from_protocol_notify_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define mod_scmi_from_protocol_notify_Expect(service_id, protocol_id, message_id, payload, size) mod_scmi_from_protocol_notify_CMockExpect(__LINE__, service_id, protocol_id, message_id, payload, size)
void mod_scmi_from_protocol_notify_CMockExpect(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, int protocol_id, int message_id, const void* payload, size_t size);
typedef void (* CMOCK_mod_scmi_from_protocol_notify_CALLBACK)(fwk_id_t service_id, int protocol_id, int message_id, const void* payload, size_t size, int cmock_num_calls);
void mod_scmi_from_protocol_notify_AddCallback(CMOCK_mod_scmi_from_protocol_notify_CALLBACK Callback);
void mod_scmi_from_protocol_notify_Stub(CMOCK_mod_scmi_from_protocol_notify_CALLBACK Callback);
#define mod_scmi_from_protocol_notify_StubWithCallback mod_scmi_from_protocol_notify_Stub
#define mod_scmi_from_protocol_send_message_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_send_message_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_send_message_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_send_message_ExpectAndReturn(scmi_message_id, scmi_protocol_id, token, service_id, payload, payload_size, request_ack_by_interrupt, cmock_retval) mod_scmi_from_protocol_send_message_CMockExpectAndReturn(__LINE__, scmi_message_id, scmi_protocol_id, token, service_id, payload, payload_size, request_ack_by_interrupt, cmock_retval)
void mod_scmi_from_protocol_send_message_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t scmi_message_id, uint8_t scmi_protocol_id, uint8_t token, fwk_id_t service_id, const void* payload, size_t payload_size, bool request_ack_by_interrupt, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_send_message_CALLBACK)(uint8_t scmi_message_id, uint8_t scmi_protocol_id, uint8_t token, fwk_id_t service_id, const void* payload, size_t payload_size, bool request_ack_by_interrupt, int cmock_num_calls);
void mod_scmi_from_protocol_send_message_AddCallback(CMOCK_mod_scmi_from_protocol_send_message_CALLBACK Callback);
void mod_scmi_from_protocol_send_message_Stub(CMOCK_mod_scmi_from_protocol_send_message_CALLBACK Callback);
#define mod_scmi_from_protocol_send_message_StubWithCallback mod_scmi_from_protocol_send_message_Stub
#define mod_scmi_from_protocol_response_message_handler_ExpectAnyArgsAndReturn(cmock_retval) mod_scmi_from_protocol_response_message_handler_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_scmi_from_protocol_response_message_handler_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_scmi_from_protocol_response_message_handler_ExpectAndReturn(service_id, cmock_retval) mod_scmi_from_protocol_response_message_handler_CMockExpectAndReturn(__LINE__, service_id, cmock_retval)
void mod_scmi_from_protocol_response_message_handler_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t service_id, int cmock_to_return);
typedef int (* CMOCK_mod_scmi_from_protocol_response_message_handler_CALLBACK)(fwk_id_t service_id, int cmock_num_calls);
void mod_scmi_from_protocol_response_message_handler_AddCallback(CMOCK_mod_scmi_from_protocol_response_message_handler_CALLBACK Callback);
void mod_scmi_from_protocol_response_message_handler_Stub(CMOCK_mod_scmi_from_protocol_response_message_handler_CALLBACK Callback);
#define mod_scmi_from_protocol_response_message_handler_StubWithCallback mod_scmi_from_protocol_response_message_handler_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
