/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_SENSOR_WITH_CONDITIONALS_EXTRA_H
#define _MOCKMOD_SENSOR_WITH_CONDITIONALS_EXTRA_H

#include "unity.h"
#include "mod_sensor_with_conditionals_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_sensor_with_conditionals_extra_Init(void);
void Mockmod_sensor_with_conditionals_extra_Destroy(void);
void Mockmod_sensor_with_conditionals_extra_Verify(void);




#define sensor_set_timestamp_config_IgnoreAndReturn(cmock_retval) sensor_set_timestamp_config_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sensor_set_timestamp_config_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_set_timestamp_config_StopIgnore() sensor_set_timestamp_config_CMockStopIgnore()
void sensor_set_timestamp_config_CMockStopIgnore(void);
#define sensor_set_timestamp_config_ExpectAnyArgsAndReturn(cmock_retval) sensor_set_timestamp_config_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void sensor_set_timestamp_config_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_set_timestamp_config_ExpectAndReturn(id, config, cmock_retval) sensor_set_timestamp_config_CMockExpectAndReturn(__LINE__, id, config, cmock_retval)
void sensor_set_timestamp_config_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, const struct mod_sensor_timestamp_info* config, int cmock_to_return);
typedef int (* CMOCK_sensor_set_timestamp_config_CALLBACK)(fwk_id_t id, const struct mod_sensor_timestamp_info* config, int cmock_num_calls);
void sensor_set_timestamp_config_AddCallback(CMOCK_sensor_set_timestamp_config_CALLBACK Callback);
void sensor_set_timestamp_config_Stub(CMOCK_sensor_set_timestamp_config_CALLBACK Callback);
#define sensor_set_timestamp_config_StubWithCallback sensor_set_timestamp_config_Stub
#define sensor_set_timestamp_config_ExpectWithArrayAndReturn(id, config, config_Depth, cmock_retval) sensor_set_timestamp_config_CMockExpectWithArrayAndReturn(__LINE__, id, config, config_Depth, cmock_retval)
void sensor_set_timestamp_config_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, const struct mod_sensor_timestamp_info* config, int config_Depth, int cmock_to_return);
#define sensor_set_timestamp_config_IgnoreArg_id() sensor_set_timestamp_config_CMockIgnoreArg_id(__LINE__)
void sensor_set_timestamp_config_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define sensor_set_timestamp_config_IgnoreArg_config() sensor_set_timestamp_config_CMockIgnoreArg_config(__LINE__)
void sensor_set_timestamp_config_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define sensor_get_timestamp_config_IgnoreAndReturn(cmock_retval) sensor_get_timestamp_config_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sensor_get_timestamp_config_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_get_timestamp_config_StopIgnore() sensor_get_timestamp_config_CMockStopIgnore()
void sensor_get_timestamp_config_CMockStopIgnore(void);
#define sensor_get_timestamp_config_ExpectAnyArgsAndReturn(cmock_retval) sensor_get_timestamp_config_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void sensor_get_timestamp_config_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_get_timestamp_config_ExpectAndReturn(id, config, cmock_retval) sensor_get_timestamp_config_CMockExpectAndReturn(__LINE__, id, config, cmock_retval)
void sensor_get_timestamp_config_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, struct mod_sensor_timestamp_info* config, int cmock_to_return);
typedef int (* CMOCK_sensor_get_timestamp_config_CALLBACK)(fwk_id_t id, struct mod_sensor_timestamp_info* config, int cmock_num_calls);
void sensor_get_timestamp_config_AddCallback(CMOCK_sensor_get_timestamp_config_CALLBACK Callback);
void sensor_get_timestamp_config_Stub(CMOCK_sensor_get_timestamp_config_CALLBACK Callback);
#define sensor_get_timestamp_config_StubWithCallback sensor_get_timestamp_config_Stub
#define sensor_get_timestamp_config_ExpectWithArrayAndReturn(id, config, config_Depth, cmock_retval) sensor_get_timestamp_config_CMockExpectWithArrayAndReturn(__LINE__, id, config, config_Depth, cmock_retval)
void sensor_get_timestamp_config_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, struct mod_sensor_timestamp_info* config, int config_Depth, int cmock_to_return);
#define sensor_get_timestamp_config_ReturnThruPtr_config(config) sensor_get_timestamp_config_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(struct mod_sensor_timestamp_info))
#define sensor_get_timestamp_config_ReturnArrayThruPtr_config(config, cmock_len) sensor_get_timestamp_config_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define sensor_get_timestamp_config_ReturnMemThruPtr_config(config, cmock_size) sensor_get_timestamp_config_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void sensor_get_timestamp_config_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, struct mod_sensor_timestamp_info* config, size_t cmock_size);
#define sensor_get_timestamp_config_IgnoreArg_id() sensor_get_timestamp_config_CMockIgnoreArg_id(__LINE__)
void sensor_get_timestamp_config_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define sensor_get_timestamp_config_IgnoreArg_config() sensor_get_timestamp_config_CMockIgnoreArg_config(__LINE__)
void sensor_get_timestamp_config_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define sensor_get_axis_info_IgnoreAndReturn(cmock_retval) sensor_get_axis_info_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sensor_get_axis_info_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_get_axis_info_StopIgnore() sensor_get_axis_info_CMockStopIgnore()
void sensor_get_axis_info_CMockStopIgnore(void);
#define sensor_get_axis_info_ExpectAnyArgsAndReturn(cmock_retval) sensor_get_axis_info_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void sensor_get_axis_info_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_get_axis_info_ExpectAndReturn(id, axis, info, cmock_retval) sensor_get_axis_info_CMockExpectAndReturn(__LINE__, id, axis, info, cmock_retval)
void sensor_get_axis_info_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t axis, struct mod_sensor_axis_info* info, int cmock_to_return);
typedef int (* CMOCK_sensor_get_axis_info_CALLBACK)(fwk_id_t id, uint32_t axis, struct mod_sensor_axis_info* info, int cmock_num_calls);
void sensor_get_axis_info_AddCallback(CMOCK_sensor_get_axis_info_CALLBACK Callback);
void sensor_get_axis_info_Stub(CMOCK_sensor_get_axis_info_CALLBACK Callback);
#define sensor_get_axis_info_StubWithCallback sensor_get_axis_info_Stub
#define sensor_get_axis_info_ExpectWithArrayAndReturn(id, axis, info, info_Depth, cmock_retval) sensor_get_axis_info_CMockExpectWithArrayAndReturn(__LINE__, id, axis, info, info_Depth, cmock_retval)
void sensor_get_axis_info_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint32_t axis, struct mod_sensor_axis_info* info, int info_Depth, int cmock_to_return);
#define sensor_get_axis_info_ReturnThruPtr_info(info) sensor_get_axis_info_CMockReturnMemThruPtr_info(__LINE__, info, sizeof(struct mod_sensor_axis_info))
#define sensor_get_axis_info_ReturnArrayThruPtr_info(info, cmock_len) sensor_get_axis_info_CMockReturnMemThruPtr_info(__LINE__, info, cmock_len * sizeof(*info))
#define sensor_get_axis_info_ReturnMemThruPtr_info(info, cmock_size) sensor_get_axis_info_CMockReturnMemThruPtr_info(__LINE__, info, cmock_size)
void sensor_get_axis_info_CMockReturnMemThruPtr_info(UNITY_LINE_TYPE cmock_line, struct mod_sensor_axis_info* info, size_t cmock_size);
#define sensor_get_axis_info_IgnoreArg_id() sensor_get_axis_info_CMockIgnoreArg_id(__LINE__)
void sensor_get_axis_info_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define sensor_get_axis_info_IgnoreArg_axis() sensor_get_axis_info_CMockIgnoreArg_axis(__LINE__)
void sensor_get_axis_info_CMockIgnoreArg_axis(UNITY_LINE_TYPE cmock_line);
#define sensor_get_axis_info_IgnoreArg_info() sensor_get_axis_info_CMockIgnoreArg_info(__LINE__)
void sensor_get_axis_info_CMockIgnoreArg_info(UNITY_LINE_TYPE cmock_line);
#define sensor_axis_start_IgnoreAndReturn(cmock_retval) sensor_axis_start_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sensor_axis_start_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_axis_start_StopIgnore() sensor_axis_start_CMockStopIgnore()
void sensor_axis_start_CMockStopIgnore(void);
#define sensor_axis_start_ExpectAnyArgsAndReturn(cmock_retval) sensor_axis_start_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void sensor_axis_start_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_axis_start_ExpectAndReturn(id, cmock_retval) sensor_axis_start_CMockExpectAndReturn(__LINE__, id, cmock_retval)
void sensor_axis_start_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, int cmock_to_return);
typedef int (* CMOCK_sensor_axis_start_CALLBACK)(fwk_id_t id, int cmock_num_calls);
void sensor_axis_start_AddCallback(CMOCK_sensor_axis_start_CALLBACK Callback);
void sensor_axis_start_Stub(CMOCK_sensor_axis_start_CALLBACK Callback);
#define sensor_axis_start_StubWithCallback sensor_axis_start_Stub
#define sensor_axis_start_IgnoreArg_id() sensor_axis_start_CMockIgnoreArg_id(__LINE__)
void sensor_axis_start_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define sensor_timestamp_dev_init_IgnoreAndReturn(cmock_retval) sensor_timestamp_dev_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sensor_timestamp_dev_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_timestamp_dev_init_StopIgnore() sensor_timestamp_dev_init_CMockStopIgnore()
void sensor_timestamp_dev_init_CMockStopIgnore(void);
#define sensor_timestamp_dev_init_ExpectAnyArgsAndReturn(cmock_retval) sensor_timestamp_dev_init_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void sensor_timestamp_dev_init_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define sensor_timestamp_dev_init_ExpectAndReturn(id, ctx, cmock_retval) sensor_timestamp_dev_init_CMockExpectAndReturn(__LINE__, id, ctx, cmock_retval)
void sensor_timestamp_dev_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, struct sensor_dev_ctx* ctx, int cmock_to_return);
typedef int (* CMOCK_sensor_timestamp_dev_init_CALLBACK)(fwk_id_t id, struct sensor_dev_ctx* ctx, int cmock_num_calls);
void sensor_timestamp_dev_init_AddCallback(CMOCK_sensor_timestamp_dev_init_CALLBACK Callback);
void sensor_timestamp_dev_init_Stub(CMOCK_sensor_timestamp_dev_init_CALLBACK Callback);
#define sensor_timestamp_dev_init_StubWithCallback sensor_timestamp_dev_init_Stub
#define sensor_timestamp_dev_init_ExpectWithArrayAndReturn(id, ctx, ctx_Depth, cmock_retval) sensor_timestamp_dev_init_CMockExpectWithArrayAndReturn(__LINE__, id, ctx, ctx_Depth, cmock_retval)
void sensor_timestamp_dev_init_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, struct sensor_dev_ctx* ctx, int ctx_Depth, int cmock_to_return);
#define sensor_timestamp_dev_init_ReturnThruPtr_ctx(ctx) sensor_timestamp_dev_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, sizeof(struct sensor_dev_ctx))
#define sensor_timestamp_dev_init_ReturnArrayThruPtr_ctx(ctx, cmock_len) sensor_timestamp_dev_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_len * sizeof(*ctx))
#define sensor_timestamp_dev_init_ReturnMemThruPtr_ctx(ctx, cmock_size) sensor_timestamp_dev_init_CMockReturnMemThruPtr_ctx(__LINE__, ctx, cmock_size)
void sensor_timestamp_dev_init_CMockReturnMemThruPtr_ctx(UNITY_LINE_TYPE cmock_line, struct sensor_dev_ctx* ctx, size_t cmock_size);
#define sensor_timestamp_dev_init_IgnoreArg_id() sensor_timestamp_dev_init_CMockIgnoreArg_id(__LINE__)
void sensor_timestamp_dev_init_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);
#define sensor_timestamp_dev_init_IgnoreArg_ctx() sensor_timestamp_dev_init_CMockIgnoreArg_ctx(__LINE__)
void sensor_timestamp_dev_init_CMockIgnoreArg_ctx(UNITY_LINE_TYPE cmock_line);
#define sensor_get_timestamp_IgnoreAndReturn(cmock_retval) sensor_get_timestamp_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sensor_get_timestamp_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
#define sensor_get_timestamp_StopIgnore() sensor_get_timestamp_CMockStopIgnore()
void sensor_get_timestamp_CMockStopIgnore(void);
#define sensor_get_timestamp_ExpectAnyArgsAndReturn(cmock_retval) sensor_get_timestamp_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void sensor_get_timestamp_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
#define sensor_get_timestamp_ExpectAndReturn(id, cmock_retval) sensor_get_timestamp_CMockExpectAndReturn(__LINE__, id, cmock_retval)
void sensor_get_timestamp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t id, uint64_t cmock_to_return);
typedef uint64_t (* CMOCK_sensor_get_timestamp_CALLBACK)(fwk_id_t id, int cmock_num_calls);
void sensor_get_timestamp_AddCallback(CMOCK_sensor_get_timestamp_CALLBACK Callback);
void sensor_get_timestamp_Stub(CMOCK_sensor_get_timestamp_CALLBACK Callback);
#define sensor_get_timestamp_StubWithCallback sensor_get_timestamp_Stub
#define sensor_get_timestamp_IgnoreArg_id() sensor_get_timestamp_CMockIgnoreArg_id(__LINE__)
void sensor_get_timestamp_CMockIgnoreArg_id(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
