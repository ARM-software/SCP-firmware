/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKFWK_CORE_INTERNAL_H
#define _MOCKFWK_CORE_INTERNAL_H

#include "unity.h"
#include "internal/fwk_core.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockfwk_core_internal_Init(void);
void Mockfwk_core_internal_Destroy(void);
void Mockfwk_core_internal_Verify(void);




#define __fwk_init_ExpectAnyArgsAndReturn(cmock_retval) __fwk_init_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void __fwk_init_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define __fwk_init_ExpectAndReturn(event_count, cmock_retval) __fwk_init_CMockExpectAndReturn(__LINE__, event_count, cmock_retval)
void __fwk_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, size_t event_count, int cmock_to_return);
typedef int (* CMOCK___fwk_init_CALLBACK)(size_t event_count, int cmock_num_calls);
void __fwk_init_AddCallback(CMOCK___fwk_init_CALLBACK Callback);
void __fwk_init_Stub(CMOCK___fwk_init_CALLBACK Callback);
#define __fwk_init_StubWithCallback __fwk_init_Stub
#define __fwk_run_main_loop_Expect() __fwk_run_main_loop_CMockExpect(__LINE__)
void __fwk_run_main_loop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK___fwk_run_main_loop_CALLBACK)(int cmock_num_calls);
void __fwk_run_main_loop_AddCallback(CMOCK___fwk_run_main_loop_CALLBACK Callback);
void __fwk_run_main_loop_Stub(CMOCK___fwk_run_main_loop_CALLBACK Callback);
#define __fwk_run_main_loop_StubWithCallback __fwk_run_main_loop_Stub
#define __fwk_get_current_event_ExpectAndReturn(cmock_retval) __fwk_get_current_event_CMockExpectAndReturn(__LINE__, cmock_retval)
void __fwk_get_current_event_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_event* cmock_to_return);
#define __fwk_put_notification_ExpectAnyArgsAndReturn(cmock_retval) __fwk_put_notification_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void __fwk_put_notification_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define __fwk_put_notification_ExpectAndReturn(event, cmock_retval) __fwk_put_notification_CMockExpectAndReturn(__LINE__, event, cmock_retval)
void __fwk_put_notification_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_event* event, int cmock_to_return);
#define __fwk_put_event_ExpectAnyArgsAndReturn(cmock_retval) __fwk_put_event_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void __fwk_put_event_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define __fwk_put_event_ExpectAndReturn(event, cmock_retval) __fwk_put_event_CMockExpectAndReturn(__LINE__, event, cmock_retval)
void __fwk_put_event_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_event* event, int cmock_to_return);
#define __fwk_put_event_light_ExpectAnyArgsAndReturn(cmock_retval) __fwk_put_event_light_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void __fwk_put_event_light_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define __fwk_put_event_light_ExpectAndReturn(event, cmock_retval) __fwk_put_event_light_CMockExpectAndReturn(__LINE__, event, cmock_retval)
void __fwk_put_event_light_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_event_light* event, int cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
