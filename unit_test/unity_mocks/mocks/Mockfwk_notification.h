/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKFWK_NOTIFICATION_H
#define _MOCKFWK_NOTIFICATION_H

#include "unity.h"
#include "fwk_notification.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockfwk_notification_Init(void);
void Mockfwk_notification_Destroy(void);
void Mockfwk_notification_Verify(void);




#define fwk_notification_subscribe_IgnoreAndReturn(cmock_retval) fwk_notification_subscribe_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void fwk_notification_subscribe_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define fwk_notification_subscribe_StopIgnore() fwk_notification_subscribe_CMockStopIgnore()
void fwk_notification_subscribe_CMockStopIgnore(void);
#define fwk_notification_subscribe_ExpectAnyArgsAndReturn(cmock_retval) fwk_notification_subscribe_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_notification_subscribe_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define fwk_notification_subscribe_ExpectAndReturn(notification_id, source_id, target_id, cmock_retval) fwk_notification_subscribe_CMockExpectAndReturn(__LINE__, notification_id, source_id, target_id, cmock_retval)
void fwk_notification_subscribe_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t notification_id, fwk_id_t source_id, fwk_id_t target_id, int cmock_to_return);
typedef int (* CMOCK_fwk_notification_subscribe_CALLBACK)(fwk_id_t notification_id, fwk_id_t source_id, fwk_id_t target_id, int cmock_num_calls);
void fwk_notification_subscribe_AddCallback(CMOCK_fwk_notification_subscribe_CALLBACK Callback);
void fwk_notification_subscribe_Stub(CMOCK_fwk_notification_subscribe_CALLBACK Callback);
#define fwk_notification_subscribe_StubWithCallback fwk_notification_subscribe_Stub
#define fwk_notification_subscribe_IgnoreArg_notification_id() fwk_notification_subscribe_CMockIgnoreArg_notification_id(__LINE__)
void fwk_notification_subscribe_CMockIgnoreArg_notification_id(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_subscribe_IgnoreArg_source_id() fwk_notification_subscribe_CMockIgnoreArg_source_id(__LINE__)
void fwk_notification_subscribe_CMockIgnoreArg_source_id(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_subscribe_IgnoreArg_target_id() fwk_notification_subscribe_CMockIgnoreArg_target_id(__LINE__)
void fwk_notification_subscribe_CMockIgnoreArg_target_id(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_unsubscribe_IgnoreAndReturn(cmock_retval) fwk_notification_unsubscribe_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void fwk_notification_unsubscribe_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define fwk_notification_unsubscribe_StopIgnore() fwk_notification_unsubscribe_CMockStopIgnore()
void fwk_notification_unsubscribe_CMockStopIgnore(void);
#define fwk_notification_unsubscribe_ExpectAnyArgsAndReturn(cmock_retval) fwk_notification_unsubscribe_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_notification_unsubscribe_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define fwk_notification_unsubscribe_ExpectAndReturn(notification_id, source_id, target_id, cmock_retval) fwk_notification_unsubscribe_CMockExpectAndReturn(__LINE__, notification_id, source_id, target_id, cmock_retval)
void fwk_notification_unsubscribe_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t notification_id, fwk_id_t source_id, fwk_id_t target_id, int cmock_to_return);
typedef int (* CMOCK_fwk_notification_unsubscribe_CALLBACK)(fwk_id_t notification_id, fwk_id_t source_id, fwk_id_t target_id, int cmock_num_calls);
void fwk_notification_unsubscribe_AddCallback(CMOCK_fwk_notification_unsubscribe_CALLBACK Callback);
void fwk_notification_unsubscribe_Stub(CMOCK_fwk_notification_unsubscribe_CALLBACK Callback);
#define fwk_notification_unsubscribe_StubWithCallback fwk_notification_unsubscribe_Stub
#define fwk_notification_unsubscribe_IgnoreArg_notification_id() fwk_notification_unsubscribe_CMockIgnoreArg_notification_id(__LINE__)
void fwk_notification_unsubscribe_CMockIgnoreArg_notification_id(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_unsubscribe_IgnoreArg_source_id() fwk_notification_unsubscribe_CMockIgnoreArg_source_id(__LINE__)
void fwk_notification_unsubscribe_CMockIgnoreArg_source_id(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_unsubscribe_IgnoreArg_target_id() fwk_notification_unsubscribe_CMockIgnoreArg_target_id(__LINE__)
void fwk_notification_unsubscribe_CMockIgnoreArg_target_id(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_notify_IgnoreAndReturn(cmock_retval) fwk_notification_notify_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void fwk_notification_notify_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define fwk_notification_notify_StopIgnore() fwk_notification_notify_CMockStopIgnore()
void fwk_notification_notify_CMockStopIgnore(void);
#define fwk_notification_notify_ExpectAnyArgsAndReturn(cmock_retval) fwk_notification_notify_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_notification_notify_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define fwk_notification_notify_ExpectAndReturn(notification_event, count, cmock_retval) fwk_notification_notify_CMockExpectAndReturn(__LINE__, notification_event, count, cmock_retval)
void fwk_notification_notify_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_event* notification_event, unsigned int* count, int cmock_to_return);
typedef int (* CMOCK_fwk_notification_notify_CALLBACK)(struct fwk_event* notification_event, unsigned int* count, int cmock_num_calls);
void fwk_notification_notify_AddCallback(CMOCK_fwk_notification_notify_CALLBACK Callback);
void fwk_notification_notify_Stub(CMOCK_fwk_notification_notify_CALLBACK Callback);
#define fwk_notification_notify_StubWithCallback fwk_notification_notify_Stub
#define fwk_notification_notify_ExpectWithArrayAndReturn(notification_event, notification_event_Depth, count, count_Depth, cmock_retval) fwk_notification_notify_CMockExpectWithArrayAndReturn(__LINE__, notification_event, notification_event_Depth, count, count_Depth, cmock_retval)
void fwk_notification_notify_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_event* notification_event, int notification_event_Depth, unsigned int* count, int count_Depth, int cmock_to_return);
#define fwk_notification_notify_ReturnThruPtr_notification_event(notification_event) fwk_notification_notify_CMockReturnMemThruPtr_notification_event(__LINE__, notification_event, sizeof(struct fwk_event))
#define fwk_notification_notify_ReturnArrayThruPtr_notification_event(notification_event, cmock_len) fwk_notification_notify_CMockReturnMemThruPtr_notification_event(__LINE__, notification_event, cmock_len * sizeof(*notification_event))
#define fwk_notification_notify_ReturnMemThruPtr_notification_event(notification_event, cmock_size) fwk_notification_notify_CMockReturnMemThruPtr_notification_event(__LINE__, notification_event, cmock_size)
void fwk_notification_notify_CMockReturnMemThruPtr_notification_event(UNITY_LINE_TYPE cmock_line, struct fwk_event* notification_event, size_t cmock_size);
#define fwk_notification_notify_ReturnThruPtr_count(count) fwk_notification_notify_CMockReturnMemThruPtr_count(__LINE__, count, sizeof(unsigned int))
#define fwk_notification_notify_ReturnArrayThruPtr_count(count, cmock_len) fwk_notification_notify_CMockReturnMemThruPtr_count(__LINE__, count, cmock_len * sizeof(*count))
#define fwk_notification_notify_ReturnMemThruPtr_count(count, cmock_size) fwk_notification_notify_CMockReturnMemThruPtr_count(__LINE__, count, cmock_size)
void fwk_notification_notify_CMockReturnMemThruPtr_count(UNITY_LINE_TYPE cmock_line, unsigned int* count, size_t cmock_size);
#define fwk_notification_notify_IgnoreArg_notification_event() fwk_notification_notify_CMockIgnoreArg_notification_event(__LINE__)
void fwk_notification_notify_CMockIgnoreArg_notification_event(UNITY_LINE_TYPE cmock_line);
#define fwk_notification_notify_IgnoreArg_count() fwk_notification_notify_CMockIgnoreArg_count(__LINE__)
void fwk_notification_notify_CMockIgnoreArg_count(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
