/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKFWK_RING_H
#define _MOCKFWK_RING_H

#include "unity.h"
#include "fwk_ring.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockfwk_ring_Init(void);
void Mockfwk_ring_Destroy(void);
void Mockfwk_ring_Verify(void);




#define fwk_ring_init_ExpectAnyArgs() fwk_ring_init_CMockExpectAnyArgs(__LINE__)
void fwk_ring_init_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define fwk_ring_init_Expect(ring, storage, storage_size) fwk_ring_init_CMockExpect(__LINE__, ring, storage, storage_size)
void fwk_ring_init_CMockExpect(UNITY_LINE_TYPE cmock_line, struct fwk_ring* ring, char* storage, size_t storage_size);
#define fwk_ring_get_capacity_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_get_capacity_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_get_capacity_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define fwk_ring_get_capacity_ExpectAndReturn(ring, cmock_retval) fwk_ring_get_capacity_CMockExpectAndReturn(__LINE__, ring, cmock_retval)
void fwk_ring_get_capacity_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_ring* ring, size_t cmock_to_return);
#define fwk_ring_get_length_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_get_length_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_get_length_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define fwk_ring_get_length_ExpectAndReturn(ring, cmock_retval) fwk_ring_get_length_CMockExpectAndReturn(__LINE__, ring, cmock_retval)
void fwk_ring_get_length_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_ring* ring, size_t cmock_to_return);
#define fwk_ring_get_free_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_get_free_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_get_free_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define fwk_ring_get_free_ExpectAndReturn(ring, cmock_retval) fwk_ring_get_free_CMockExpectAndReturn(__LINE__, ring, cmock_retval)
void fwk_ring_get_free_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_ring* ring, size_t cmock_to_return);
#define fwk_ring_is_full_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_is_full_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_is_full_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define fwk_ring_is_full_ExpectAndReturn(ring, cmock_retval) fwk_ring_is_full_CMockExpectAndReturn(__LINE__, ring, cmock_retval)
void fwk_ring_is_full_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_ring* ring, bool cmock_to_return);
#define fwk_ring_is_empty_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_is_empty_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_is_empty_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define fwk_ring_is_empty_ExpectAndReturn(ring, cmock_retval) fwk_ring_is_empty_CMockExpectAndReturn(__LINE__, ring, cmock_retval)
void fwk_ring_is_empty_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_ring* ring, bool cmock_to_return);
#define fwk_ring_pop_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_pop_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_pop_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define fwk_ring_pop_ExpectAndReturn(ring, buffer, buffer_size, cmock_retval) fwk_ring_pop_CMockExpectAndReturn(__LINE__, ring, buffer, buffer_size, cmock_retval)
void fwk_ring_pop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_ring* ring, char* buffer, size_t buffer_size, size_t cmock_to_return);
#define fwk_ring_peek_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_peek_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_peek_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define fwk_ring_peek_ExpectAndReturn(ring, buffer, buffer_size, cmock_retval) fwk_ring_peek_CMockExpectAndReturn(__LINE__, ring, buffer, buffer_size, cmock_retval)
void fwk_ring_peek_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const struct fwk_ring* ring, char* buffer, size_t buffer_size, size_t cmock_to_return);
#define fwk_ring_push_ExpectAnyArgsAndReturn(cmock_retval) fwk_ring_push_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void fwk_ring_push_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define fwk_ring_push_ExpectAndReturn(ring, buffer, buffer_size, cmock_retval) fwk_ring_push_CMockExpectAndReturn(__LINE__, ring, buffer, buffer_size, cmock_retval)
void fwk_ring_push_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct fwk_ring* ring, const char* buffer, size_t buffer_size, size_t cmock_to_return);
#define fwk_ring_clear_ExpectAnyArgs() fwk_ring_clear_CMockExpectAnyArgs(__LINE__)
void fwk_ring_clear_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define fwk_ring_clear_Expect(ring) fwk_ring_clear_CMockExpect(__LINE__, ring)
void fwk_ring_clear_CMockExpect(UNITY_LINE_TYPE cmock_line, struct fwk_ring* ring);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
